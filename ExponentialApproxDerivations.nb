(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    775652,      14413]
NotebookOptionsPosition[    771055,      14326]
NotebookOutlinePosition[    771450,      14342]
CellTagsIndexPosition[    771407,      14339]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Exponential approximations derivations for stars and gas", "Chapter",
 CellChangeTimes->{{3.819887823562251*^9, 3.819887824720593*^9}, {
   3.840309006643361*^9, 3.840309006777149*^9}, {3.840309439328479*^9, 
   3.840309439575939*^9}, {3.856277032451497*^9, 3.856277041686769*^9}, {
   3.856280335836396*^9, 3.856280348121335*^9}, {3.863792966861247*^9, 
   3.86379296693944*^9}, 3.864401119566472*^9, 3.86591765411101*^9, {
   3.868212679871296*^9, 
   3.8682127057910147`*^9}},ExpressionUUID->"19249ee4-d487-43e0-b6dd-\
ca5648b1a366"],

Cell["\<\
By Davi Rodrigues & Alejandro Hernandez-Arboleda
This file is part of the NAVanalysis code
July, 2022\
\>", "Author",
 CellChangeTimes->{{3.7913923963075333`*^9, 3.7913924489347477`*^9}, {
  3.805049903233181*^9, 3.805049926397559*^9}, {3.8366855438277683`*^9, 
  3.836685544711759*^9}, {3.84011058304108*^9, 3.840110584143558*^9}, {
  3.845980914870075*^9, 3.845980918541807*^9}, {3.856264702100581*^9, 
  3.85626470377555*^9}, {3.856264934196796*^9, 3.856264935995282*^9}, {
  3.868115259585947*^9, 3.868115260101923*^9}, {3.8682128301500673`*^9, 
  3.868212837405842*^9}},ExpressionUUID->"2e487a3f-df0d-4eea-bece-\
412f6c7ca7c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pathBaseDirectory", " ", "=", " ", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pathOutputDirectory", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"pathBaseDirectory", ",", " ", "\"\<Output\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pathAuxDirectory", " ", "=", " ", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"pathBaseDirectory", ",", " ", "\"\<AuxiliaryData\>\""}], "}"}],
      "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", " ", "@", " ", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", " ", "@", " ", "\"\<NAVbaseCode`\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Get", " ", "@", " ", "\"\<NAVauxiliaryFunctions.wl\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", " ", "@", " ", "pathOutputDirectory"}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.868212797896295*^9, {3.8682138641491537`*^9, 3.868213869222316*^9}, {
   3.868214081568245*^9, 3.868214081806452*^9}, {3.872342167170556*^9, 
   3.872342242635726*^9}, {3.8723486069197598`*^9, 3.8723486349552393`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d2916f68-f34d-4463-bea2-606d3a7bcc3e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["NAVbaseCode`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], " ", 
              StyleBox["NAVbaseCode`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["addCol", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "addCol", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["equal0", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "equal0", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["gd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "gd", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["nSigmaProbability", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "nSigmaProbability", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sqrtSign", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "sqrtSign", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["areaObs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "areaObs", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FindHDPDFValues", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "FindHDPDFValues", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["gdR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "gdR", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["plotSigmaContours", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "plotSigmaContours", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["squareSign", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "squareSign", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["areaSigma", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "areaSigma", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["galaxy", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "galaxy", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["gdRBulgeless", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "gdRBulgeless", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["positivePart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "positivePart", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["\[Delta]Vobs1\[Sigma]L", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "\[Delta]Vobs1\[Sigma]L", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["clearOwnValues", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "clearOwnValues", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["galdata", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "galdata", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["hRadlist", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "hRadlist", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["putcolG", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "putcolG", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["\[Delta]Vobs1\[Sigma]U", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "\[Delta]Vobs1\[Sigma]U", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["distance", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "distance", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["galdataExt", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "galdataExt", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["listExtractPoints", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "listExtractPoints", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["regionDifference", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "regionDifference", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["\[Delta]Vobs2\[Sigma]L", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "\[Delta]Vobs2\[Sigma]L", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["distributionSilverman", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "distributionSilverman", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["galdataRAR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "galdataRAR", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["medianUncertainty", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "medianUncertainty", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["regionIntersection", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "regionIntersection", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["\[Delta]Vobs2\[Sigma]U", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "\[Delta]Vobs2\[Sigma]U", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["efficiencyNAV", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "efficiencyNAV", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["galdataRARBulgeless", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "galdataRARBulgeless", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["normalRadlist", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "normalRadlist", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["removeHeader", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "removeHeader", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["efficiencyNAVtotal", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "efficiencyNAVtotal", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["galNumbers", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "galNumbers", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["normalVobslist", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "normalVobslist", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["silvermanBw", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13773f6e-4f6a-4ab3-87a6-2ae79ea41b54", {
                   "silvermanBw", "NAVbaseCode`"}, True},
                 ButtonNote->"NAVbaseCode`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Print",
 CellChangeTimes->{3.8682140375891333`*^9, 3.872342065033207*^9, 
  3.8723422284971447`*^9, 3.872342258841311*^9, 3.872425987608727*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ed0145a5-281f-4104-bceb-944b6dbdc8c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["General definitions", "Section",
 CellChangeTimes->{{3.8724260494767027`*^9, 
  3.872426051411524*^9}},ExpressionUUID->"74279a48-9b29-46d3-991f-\
68378081c25e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "chi2", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", "\n", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vExp", " ", "comes", " ", "from", " ", "Binney"}], " ", "&"}], 
     " ", "Tremaine", " ", "2", "nd", " ", 
     RowBox[{"Ed", "."}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"eq", ".", 
       RowBox[{"(", "2.165", ")"}], ".", " ", "\n", "  ", "It"}], " ", "is", 
      " ", "assumed", " ", "that", "  ", "\[CapitalSigma]"}], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", "0"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "R"}], "/", "h"}]]}]}], ",", " ", 
    RowBox[{"where", " ", 
     SubscriptBox["\[CapitalSigma]", "0"], " ", "has", " ", "dimension", " ", 
     "of", " ", 
     RowBox[{"mass", "/", 
      RowBox[{"length", "^", "2"}]}]}], ",", " ", 
    RowBox[{"it", "  ", "is", " ", "the", " ", "surface", " ", "mass", " ", 
     RowBox[{"density", "."}]}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vExp", "[", 
     RowBox[{"R_", ",", "logSigma0_", ",", "h_"}], "]"}], "=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "y", "}"}], ",", " ", "\n", "  ", 
      RowBox[{
       RowBox[{"y", " ", "=", " ", 
        RowBox[{"R", "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "h"}], ")"}]}]}], ";", "\n", "  ", 
       RowBox[{"kpc", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"4", " ", "\[Pi]", " ", "G0", " ", 
          RowBox[{"10", "^", "logSigma0"}], " ", "h", " ", 
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"BesselI", "[", 
              RowBox[{"0", ",", "y"}], "]"}], " ", 
             RowBox[{"BesselK", "[", 
              RowBox[{"0", ",", "y"}], "]"}]}], " ", "-", " ", 
            RowBox[{
             RowBox[{"BesselI", "[", 
              RowBox[{"1", ",", "y"}], "]"}], " ", 
             RowBox[{"BesselK", "[", 
              RowBox[{"1", ",", "y"}], "]"}]}]}], ")"}]}], "]"}]}]}]}], "\n", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chi2", "[", 
    RowBox[{
    "model_List", ",", " ", "dataObs_List", ",", " ", "uncertainty_List"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"chi2", "[", 
     RowBox[{"model", ",", " ", "dataObs", ",", " ", "uncertainty"}], "]"}], 
    "  ", "=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"model", "-", "dataObs"}], ")"}], "^", "2"}], "/", 
      RowBox[{"uncertainty", "^", "2"}]}], "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.872426067514387*^9, 3.872426069738886*^9}, {
  3.872426550114684*^9, 3.872426563243431*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f867ece0-9c99-4286-b24b-098572b0d1a9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.87234249511092*^9, 
  3.872342497594749*^9}},ExpressionUUID->"c1a86fbe-4af4-4355-a8c9-\
804f0a8ce9f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stellar contribution", "Section",
 CellChangeTimes->{{3.8403097121530123`*^9, 3.840309720591474*^9}, {
   3.8403101386957083`*^9, 3.8403101520057297`*^9}, {3.8403178185208807`*^9, 
   3.840317824236273*^9}, {3.840366731141904*^9, 3.840366736485551*^9}, {
   3.84056596170426*^9, 3.8405659624024143`*^9}, {3.840657357774371*^9, 
   3.840657369068718*^9}, {3.856277070634156*^9, 3.856277124894209*^9}, {
   3.8562783903034363`*^9, 3.856278392304873*^9}, 
   3.868212852774535*^9},ExpressionUUID->"337fc1a2-e6c9-486b-aa66-\
f2ae2c3561bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "fitExpVdisk", ",", " ", "fitExpVdiskPlot", ",", " ", 
     "associationFitExpVdisk"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"associationFitExpVdisk", "::", "usage"}], "=", 
    RowBox[{
    "\"\<associationFitExpVdisk[galaxyNumber, data(R x Vdisk)] fits the \
radial vs disk velocity curve data as a rotation curve for an exponential \
disk and returns an association with several data. \>\"", "<>", 
     "\[IndentingNewLine]", "  ", 
     "\"\<For fitting, it is assumed an uncertainty of either 10% on the \
velocity or at least 2 km/s. The important point is not the porportionality \
constant, but that the uncertainty is proportional to the velocity.\>\"", "<>",
      "\n", "  ", 
     "\"\<If data = {},  associationFitExpVdisk returns {}.\>\""}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"associationFitExpVdisk", "[", 
     RowBox[{"galaxyNumber_", ",", " ", "dataRVdisk_List"}], "]"}], " ", ":=",
     " ", 
    RowBox[{
     RowBox[{"fitExpVdisk", "[", 
      RowBox[{"galaxyNumber", ",", " ", "dataRVdisk"}], "]"}], " ", "=", " ", 
     
     RowBox[{"Block", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "galaxyName", ",", " ", "luminosity", ",", " ", "massHI", ",", " ", 
         "sol", ",", " ", "R", ",", " ", "h", ",", " ", "bestLogSigma0", ",", 
         " ", "besth", ",", " ", "logSigma0", ",", " ", "listModel", ",", " ",
          "uncertainty", ",", " ", "rMax", ",", " ", "solExtended"}], "}"}], 
       ",", "\n", "  ", 
       RowBox[{
        RowBox[{"If", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"dataRVdisk", "==", 
           RowBox[{"{", "}"}]}], ",", " ", "\n", "    ", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}], "\n", "  ", "]"}], ";", "\n", "  ", 
        RowBox[{"galaxyName", " ", "=", " ", 
         RowBox[{"galaxy", "[", "galaxyNumber", "]"}]}], ";", "\n", "  ", 
        RowBox[{"luminosity", " ", "=", " ", 
         RowBox[{"globalData", "[", 
          RowBox[{"[", 
           RowBox[{"galaxyNumber", ",", " ", "colL"}], "]"}], "]"}]}], ";", 
        "\n", "  ", 
        RowBox[{"massHI", " ", "=", " ", 
         RowBox[{"globalData", "[", 
          RowBox[{"[", 
           RowBox[{"galaxyNumber", ",", " ", "colMHI"}], "]"}], "]"}]}], ";", 
        "\n", "  ", 
        RowBox[{"rMax", " ", "=", " ", 
         RowBox[{"Last", " ", "@", " ", 
          RowBox[{"dataRVdisk", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}]}], ";", "\n", "  ", 
        RowBox[{"listModel", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"vExp", "[", 
            RowBox[{"#", " ", ",", " ", "logSigma0", ",", " ", "h"}], "]"}], 
           " ", "&"}], " ", "/@", " ", 
          RowBox[{"dataRVdisk", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", "  ", 
        RowBox[{"uncertainty", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.10", " ", 
               RowBox[{"dataRVdisk", "[", 
                RowBox[{"[", 
                 RowBox[{"#", ",", " ", "2"}], "]"}], "]"}]}], ",", " ", 
              "2"}], "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Range", " ", "@", " ", 
           RowBox[{"Length", " ", "@", " ", "dataRVdisk"}]}]}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "Assumes", " ", "uncertainty", " ", "of", " ", "10", "%", " ", "or", 
          " ", "2", " ", 
          RowBox[{"km", "/", 
           RowBox[{"s", "."}]}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"sol", " ", "=", " ", 
         RowBox[{"NMinimize", "[", "\n", "    ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"chi2", "[", 
              RowBox[{"listModel", ",", " ", 
               RowBox[{"dataRVdisk", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
               "uncertainty"}], "]"}], ",", " ", 
             RowBox[{"h", " ", ">", " ", "0"}], ",", " ", 
             RowBox[{"logSigma0", " ", ">", " ", "1"}]}], "}"}], ",", "\n", 
           "    ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"logSigma0", ",", " ", "6", ",", " ", "10"}], "}"}], 
             ",", " ", 
             RowBox[{"{", 
              RowBox[{"h", ",", " ", "0.5", ",", " ", "10"}], "}"}]}], "}"}], 
           ",", "\n", "    ", 
           RowBox[{"Method", "->", " ", "Automatic"}]}], "\n", "  ", "]"}]}], 
        ";", "\n", "  ", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"logSigma0", ",", " ", "h", ",", " ", "Chi2", ",", " ", 
           RowBox[{"Number", " ", "of", " ", "data", " ", "points"}]}], " ", 
          "}"}], "*)"}], "\n", "  ", 
        RowBox[{"solExtended", " ", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "galaxyName", ",", " ", "luminosity", ",", " ", "massHI", ",", " ", 
            RowBox[{"First", " ", "@", " ", "sol"}], ",", " ", 
            RowBox[{
             RowBox[{"First", " ", "@", " ", "sol"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "dataRVdisk", "]"}], " ", "-", " ", 
               "2"}], ")"}]}], ",", " ", "logSigma0", ",", " ", "h", ",", " ", 
            RowBox[{"h", "/", "rMax"}], ",", " ", "rMax", ",", " ", 
            RowBox[{"Length", "[", "dataRVdisk", "]"}]}], "}"}], " ", "/.", 
          " ", 
          RowBox[{"Last", "@", "sol"}]}]}], ";", "\n", "  ", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Name\>\"", ",", " ", "\"\<L\>\"", ",", " ", "\"\<MassHI\>\"", 
            ",", " ", "\"\<Chi2\>\"", ",", " ", "\"\<Chi2red\>\"", ",", " ", 
            "\"\<logSigma0\>\"", ",", " ", "\"\<h\>\"", ",", " ", 
            "\"\<hn\>\"", ",", " ", "\"\<rMax\>\"", ",", " ", 
            "\"\<dataPoints\>\""}], "}"}], ",", " ", "solExtended"}], 
         "]"}]}]}], "\n", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotFittedExpVdisk", "[", 
    RowBox[{"dataRVdisk_List", ",", " ", "bestVdiskValues_List"}], "]"}], ":=",
    " ", 
   RowBox[{"Block", "[", "\n", "  ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vMax", ",", " ", "bestLogSigma0", ",", " ", "besth", ",", " ", 
       "rMax"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"If", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"dataRVdisk", "==", 
         RowBox[{"{", "}"}]}], ",", " ", "\n", "    ", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "\n", "  ", "]"}], ";", "\n", "  ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bestLogSigma0", ",", " ", "besth"}], "}"}], " ", "=", " ", 
       "bestVdiskValues"}], ";", "\n", "  ", 
      RowBox[{"vMax", " ", "=", " ", 
       RowBox[{"Max", " ", "@", " ", 
        RowBox[{"dataRVdisk", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], ";", "\n", "  ", 
      RowBox[{"rMax", " ", "=", " ", 
       RowBox[{"Last", " ", "@", " ", 
        RowBox[{"dataRVdisk", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}]}], ";", "\n", "  ", 
      RowBox[{"Show", "[", "\n", "    ", 
       RowBox[{"{", "\n", "      ", 
        RowBox[{
         RowBox[{"ListPlot", "[", "\n", "        ", 
          RowBox[{"dataRVdisk", ",", "\n", "        ", 
           RowBox[{"PlotRange", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"1.1", " ", "*", " ", "rMax"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"1.1", " ", "*", " ", "vMax"}]}], "}"}]}], "}"}]}]}], 
          "\n", "      ", "]"}], ",", "\n", "      ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"vExp", "[", 
            RowBox[{"R", ",", " ", "bestLogSigma0", ",", " ", "besth"}], 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"R", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
           RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], "\n",
         "    ", "}"}], "\n", "  ", "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",\

 CellChangeTimes->{
  3.840565950382255*^9, {3.8405659926552267`*^9, 3.840566159262394*^9}, {
   3.840566201991818*^9, 3.840566300263585*^9}, {3.84056633472355*^9, 
   3.8405663814904127`*^9}, 3.84056643356981*^9, {3.840566757803*^9, 
   3.840566898644947*^9}, {3.840566950422214*^9, 3.840567098642686*^9}, {
   3.840567142283718*^9, 3.840567152250643*^9}, {3.8405672170430193`*^9, 
   3.840567241037881*^9}, {3.8405677046653*^9, 3.840567728188978*^9}, {
   3.840567902760618*^9, 3.840567973504526*^9}, 3.840574500687414*^9, {
   3.840641452625205*^9, 3.840641457284553*^9}, {3.840641533405507*^9, 
   3.8406416047352962`*^9}, {3.840641694684806*^9, 3.840641736651246*^9}, {
   3.840641809565763*^9, 3.840641840403996*^9}, {3.840641884013516*^9, 
   3.840641885992494*^9}, {3.840642387582684*^9, 3.8406423878110037`*^9}, {
   3.8406426517049103`*^9, 3.840642678053322*^9}, {3.840643054982633*^9, 
   3.84064305652794*^9}, {3.8406441102012033`*^9, 3.8406441144137297`*^9}, 
   3.8406677830028877`*^9, {3.8407994123306017`*^9, 3.8407996348947763`*^9}, {
   3.840799791862433*^9, 3.840799806462936*^9}, {3.840799904874942*^9, 
   3.840799989223*^9}, {3.840800042299211*^9, 3.840800107562648*^9}, {
   3.8408001718817263`*^9, 3.840800214870081*^9}, {3.8408002792120657`*^9, 
   3.840800461402907*^9}, {3.840800649945641*^9, 3.840800655835602*^9}, {
   3.8408012631073008`*^9, 3.840801276653019*^9}, {3.840802670549856*^9, 
   3.840802703502595*^9}, {3.8408028276562634`*^9, 3.840802849555458*^9}, {
   3.841073500485477*^9, 3.841073529722724*^9}, {3.8460105977354927`*^9, 
   3.846010608794894*^9}, {3.8460107071594477`*^9, 3.8460107074274063`*^9}, {
   3.8460107769437857`*^9, 3.846010880349592*^9}, {3.846010913974678*^9, 
   3.846010988408383*^9}, {3.8460114176740427`*^9, 3.846011437732202*^9}, {
   3.846011528095142*^9, 3.846011560597044*^9}, {3.846011668916415*^9, 
   3.846011683373867*^9}, {3.8460117148288097`*^9, 3.846011812222785*^9}, {
   3.846012047852385*^9, 3.846012051834124*^9}, {3.846012203198565*^9, 
   3.846012255049717*^9}, {3.846012289409829*^9, 3.846012429263043*^9}, {
   3.84601246287787*^9, 3.846012482441333*^9}, {3.8460126522161617`*^9, 
   3.846012696626575*^9}, {3.8460128989668016`*^9, 3.8460129015946293`*^9}, {
   3.84601295916558*^9, 3.84601295965758*^9}, {3.846013080842051*^9, 
   3.846013103751704*^9}, {3.846013231592396*^9, 3.846013260806332*^9}, {
   3.8460246869378757`*^9, 3.846024777680027*^9}, {3.846024868707835*^9, 
   3.846024869786641*^9}, {3.846024913527532*^9, 3.846024948604925*^9}, {
   3.8460250229029713`*^9, 3.84602508521999*^9}, {3.846025121921516*^9, 
   3.846025159042593*^9}, {3.846025381629881*^9, 3.846025426077401*^9}, {
   3.8460255183986607`*^9, 3.846025522021448*^9}, {3.846025569024395*^9, 
   3.846025701664093*^9}, 3.846025899966343*^9, {3.8460260953006268`*^9, 
   3.846026156412346*^9}, {3.846027134761794*^9, 3.846027189167296*^9}, {
   3.8460272791725407`*^9, 3.846027280564683*^9}, {3.846028097815688*^9, 
   3.846028100436421*^9}, {3.846362073728435*^9, 3.8463620886566*^9}, {
   3.846362212383678*^9, 3.8463623590921917`*^9}, {3.8463628907828093`*^9, 
   3.846362930576693*^9}, {3.846364350280134*^9, 3.846364455320915*^9}, {
   3.846364489242262*^9, 3.846364543037801*^9}, {3.846364789887507*^9, 
   3.846364797456457*^9}, {3.846366255788905*^9, 3.846366278142557*^9}, {
   3.846366351774581*^9, 3.846366718416411*^9}, 3.846366764497521*^9, {
   3.846457082928067*^9, 3.8464570836760178`*^9}, {3.846460245813802*^9, 
   3.8464602515425243`*^9}, {3.846956350108493*^9, 3.84695635603546*^9}, {
   3.8469564216382027`*^9, 3.846956516832653*^9}, {3.8469566235524263`*^9, 
   3.846956623584856*^9}, {3.846956916758647*^9, 3.846956925838284*^9}, {
   3.846957264604056*^9, 3.846957265716792*^9}, {3.8472056896622477`*^9, 
   3.847205692720076*^9}, {3.84720573385217*^9, 3.847205754956257*^9}, {
   3.855693839954427*^9, 3.855693840053932*^9}, {3.8558448611407843`*^9, 
   3.8558448611955976`*^9}, {3.855846321138577*^9, 3.8558463212024403`*^9}, {
   3.8688967926050034`*^9, 3.868896820567144*^9}, {3.8688969542530003`*^9, 
   3.868896997563792*^9}, {3.868897130548935*^9, 3.868897154120476*^9}, {
   3.868904699054165*^9, 3.868904709403317*^9}, {3.872342787636078*^9, 
   3.872342833434987*^9}, {3.872342876589027*^9, 3.872342889639139*^9}, {
   3.872342954517235*^9, 3.872343015638769*^9}, {3.87234316728872*^9, 
   3.872343173172455*^9}, {3.8723439867121363`*^9, 3.8723441044096193`*^9}, {
   3.872344162216898*^9, 3.872344168364588*^9}, {3.872344231017865*^9, 
   3.872344268596202*^9}, {3.8723445992750187`*^9, 3.8723446049551163`*^9}, {
   3.872344776540709*^9, 3.87234477757543*^9}, 3.8724260620407333`*^9, {
   3.872426518639946*^9, 3.872426518887103*^9}, {3.872426569008123*^9, 
   3.872426572281054*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"d3f0886b-7b3b-4b37-af9c-117114366cea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Echo", "[", 
   "\"\<Computing datasetExpVdiskNoBulge. This takes some seconds.\>\"", 
   "]"}], ";"}], "\n", 
 RowBox[{"datasetExpVdiskNoBulge", " ", "=", " ", 
  RowBox[{
   RowBox[{"Dataset", "[", "\n", "  ", 
    RowBox[{"DeleteCases", "[", " ", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"associationFitExpVdisk", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"gdRBulgeless", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Rad", ",", " ", "Vdisk"}], "}"}], ",", " ", "#"}], 
           "]"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
       RowBox[{"Range", "[", "175", "]"}]}], ",", " ", "\n", "  ", 
      RowBox[{"{", "}"}]}], "]"}], "\n", "]"}], " ", "//", " ", 
   "EchoTiming"}]}]}], "Code",
 CellChangeTimes->{
  3.840565950382255*^9, {3.8405659926552267`*^9, 3.840566159262394*^9}, {
   3.840566201991818*^9, 3.840566300263585*^9}, {3.84056633472355*^9, 
   3.8405663814904127`*^9}, 3.84056643356981*^9, {3.840566757803*^9, 
   3.840566898644947*^9}, {3.840566950422214*^9, 3.840567098642686*^9}, {
   3.840567142283718*^9, 3.840567152250643*^9}, {3.8405672170430193`*^9, 
   3.840567241037881*^9}, {3.8405677046653*^9, 3.840567728188978*^9}, {
   3.840567902760618*^9, 3.840567973504526*^9}, 3.840574500687414*^9, {
   3.840641452625205*^9, 3.840641457284553*^9}, {3.840641533405507*^9, 
   3.8406416047352962`*^9}, {3.840641694684806*^9, 3.840641736651246*^9}, {
   3.840641809565763*^9, 3.840641840403996*^9}, {3.840641884013516*^9, 
   3.840641885992494*^9}, {3.840642387582684*^9, 3.8406423878110037`*^9}, {
   3.8406426517049103`*^9, 3.840642678053322*^9}, {3.840643054982633*^9, 
   3.84064305652794*^9}, {3.8406441102012033`*^9, 3.8406441144137297`*^9}, 
   3.8406677830028877`*^9, {3.8407994123306017`*^9, 3.8407996348947763`*^9}, {
   3.840799791862433*^9, 3.840799806462936*^9}, {3.840799904874942*^9, 
   3.840799989223*^9}, {3.840800042299211*^9, 3.840800107562648*^9}, {
   3.8408001718817263`*^9, 3.840800214870081*^9}, {3.8408002792120657`*^9, 
   3.840800461402907*^9}, {3.840800649945641*^9, 3.840800655835602*^9}, {
   3.8408012631073008`*^9, 3.840801276653019*^9}, {3.840802670549856*^9, 
   3.840802703502595*^9}, {3.8408028276562634`*^9, 3.840802849555458*^9}, {
   3.841073500485477*^9, 3.841073529722724*^9}, {3.8460105977354927`*^9, 
   3.846010608794894*^9}, {3.8460107071594477`*^9, 3.8460107074274063`*^9}, {
   3.8460107769437857`*^9, 3.846010880349592*^9}, {3.846010913974678*^9, 
   3.846010988408383*^9}, {3.8460114176740427`*^9, 3.846011437732202*^9}, {
   3.846011528095142*^9, 3.846011560597044*^9}, {3.846011668916415*^9, 
   3.846011683373867*^9}, {3.8460117148288097`*^9, 3.846011812222785*^9}, {
   3.846012047852385*^9, 3.846012051834124*^9}, {3.846012203198565*^9, 
   3.846012255049717*^9}, {3.846012289409829*^9, 3.846012429263043*^9}, {
   3.84601246287787*^9, 3.846012482441333*^9}, {3.8460126522161617`*^9, 
   3.846012696626575*^9}, {3.8460128989668016`*^9, 3.8460129015946293`*^9}, {
   3.84601295916558*^9, 3.84601295965758*^9}, {3.846013080842051*^9, 
   3.846013103751704*^9}, {3.846013231592396*^9, 3.846013260806332*^9}, {
   3.8460246869378757`*^9, 3.846024777680027*^9}, {3.846024868707835*^9, 
   3.846024869786641*^9}, {3.846024913527532*^9, 3.846024948604925*^9}, {
   3.8460250229029713`*^9, 3.84602508521999*^9}, {3.846025121921516*^9, 
   3.846025159042593*^9}, {3.846025381629881*^9, 3.846025426077401*^9}, {
   3.8460255183986607`*^9, 3.846025522021448*^9}, {3.846025569024395*^9, 
   3.846025701664093*^9}, 3.846025899966343*^9, {3.8460260953006268`*^9, 
   3.8460261400258017`*^9}, {3.846027282032213*^9, 3.846027303266369*^9}, {
   3.846027396059825*^9, 3.8460274251741123`*^9}, {3.8460278088430862`*^9, 
   3.846027871166917*^9}, {3.846028087655388*^9, 3.8460280884091873`*^9}, {
   3.846284928396277*^9, 3.846284968410681*^9}, {3.846361535583568*^9, 
   3.846361536906148*^9}, {3.846361675144471*^9, 3.846361692198572*^9}, 
   3.846361725808509*^9, {3.846367502961885*^9, 3.846367507513171*^9}, {
   3.846367590541534*^9, 3.846367605614979*^9}, {3.846367694661376*^9, 
   3.846367725087777*^9}, {3.846367802208892*^9, 3.8463678378681307`*^9}, 
   3.846881248630905*^9, {3.846943694918165*^9, 3.8469438142417727`*^9}, 
   3.855844883573742*^9, 3.855846306253664*^9, {3.872343048307126*^9, 
   3.872343049464253*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"fa3dd150-30e5-4e8f-b922-fedb75a6a902"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Computing datasetExpVdiskNoBulge. This takes some \
seconds.\"\>"], "Echo",
 CellChangeTimes->{
  3.872426578232588*^9},ExpressionUUID->"520b352d-53e8-46a1-8eb8-\
0bfec76a4438"],

Cell[BoxData["42.500746`"], "EchoTiming",
 CellChangeTimes->{
  3.872426620753168*^9},ExpressionUUID->"e978097d-6030-4c1d-9dec-\
5c1a4d3faedf"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "CamB", "L" -> 0.075, "MassHI" -> 0.012, "Chi2" -> 
        0.9290917105563835, "Chi2red" -> 0.13272738722234048`, "logSigma0" -> 
        7.49613946375156, "h" -> 0.7509276995257536, "hn" -> 
        0.41951268129930364`, "rMax" -> 1.79, "dataPoints" -> 9|>, <|
       "Name" -> "D512-2", "L" -> 0.325, "MassHI" -> 0.081, "Chi2" -> 
        0.42484504203784745`, "Chi2red" -> 0.21242252101892373`, "logSigma0" -> 
        7.510739674695915, "h" -> 1.2919696200079032`, "hn" -> 
        0.3373288825085909, "rMax" -> 3.83, "dataPoints" -> 4|>, <|
       "Name" -> "D564-8", "L" -> 0.033, "MassHI" -> 0.029, "Chi2" -> 
        0.013124928088276552`, "Chi2red" -> 0.003281232022069138, "logSigma0" -> 
        7.032442944684357, "h" -> 0.7182892161285231, "hn" -> 
        0.23397042870635937`, "rMax" -> 3.07, "dataPoints" -> 6|>, <|
       "Name" -> "D631-7", "L" -> 0.196, "MassHI" -> 0.29, "Chi2" -> 
        3.3689850966495047`, "Chi2red" -> 0.24064179261782176`, "logSigma0" -> 
        7.630259471203956, "h" -> 0.8483291838606761, "hn" -> 
        0.11798736910440558`, "rMax" -> 7.19, "dataPoints" -> 16|>, <|
       "Name" -> "DDO064", "L" -> 0.157, "MassHI" -> 0.211, "Chi2" -> 
        2.236563623146637, "Chi2red" -> 0.18638030192888638`, "logSigma0" -> 
        7.512599919924921, "h" -> 1.0500488307515257`, "hn" -> 
        0.3523653794468207, "rMax" -> 2.98, "dataPoints" -> 14|>, <|
       "Name" -> "DDO154", "L" -> 0.053, "MassHI" -> 0.275, "Chi2" -> 
        0.07915895862828093, "Chi2red" -> 0.007915895862828093, "logSigma0" -> 
        7.64626836054603, "h" -> 0.4304051056667008, "hn" -> 
        0.07270356514640217, "rMax" -> 5.92, "dataPoints" -> 12|>, <|
       "Name" -> "DDO161", "L" -> 0.548, "MassHI" -> 1.378, "Chi2" -> 
        1.7424321987299676`, "Chi2red" -> 0.060083868921723016`, "logSigma0" -> 
        7.615562525355205, "h" -> 1.4413535160830615`, "hn" -> 
        0.10780504981922674`, "rMax" -> 13.37, "dataPoints" -> 31|>, <|
       "Name" -> "DDO168", "L" -> 0.191, "MassHI" -> 0.413, "Chi2" -> 
        0.23135156447084532`, "Chi2red" -> 0.028918945558855665`, "logSigma0" -> 
        7.378948356435107, "h" -> 1.2108847865441545`, "hn" -> 
        0.293904074403921, "rMax" -> 4.12, "dataPoints" -> 10|>, <|
       "Name" -> "DDO170", "L" -> 0.543, "MassHI" -> 0.735, "Chi2" -> 
        0.7777971164994675, "Chi2red" -> 0.12963285274991124`, "logSigma0" -> 
        7.3090250924873885`, "h" -> 2.0270630240559555`, "hn" -> 
        0.1644008940840191, "rMax" -> 12.33, "dataPoints" -> 8|>, <|
       "Name" -> "ESO079-G014", "L" -> 51.733, "MassHI" -> 3.14, "Chi2" -> 
        29.31462593667347, "Chi2red" -> 2.2549712258979593`, "logSigma0" -> 
        8.457436910517679, "h" -> 4.926035784921463, "hn" -> 
        0.2955030464859905, "rMax" -> 16.67, "dataPoints" -> 15|>, <|
       "Name" -> "ESO116-G012", "L" -> 4.292, "MassHI" -> 1.083, "Chi2" -> 
        2.251278125842969, "Chi2red" -> 0.17317524044945917`, "logSigma0" -> 
        8.37742158602462, "h" -> 1.6895556855487543`, "hn" -> 
        0.17135453200291628`, "rMax" -> 9.86, "dataPoints" -> 15|>, <|
       "Name" -> "ESO444-G084", "L" -> 0.071, "MassHI" -> 0.135, "Chi2" -> 
        0.1581265059242499, "Chi2red" -> 0.031625301184849984`, "logSigma0" -> 
        7.606056310137011, "h" -> 0.5200297783139919, "hn" -> 
        0.11712382394459275`, "rMax" -> 4.44, "dataPoints" -> 7|>, <|
       "Name" -> "ESO563-G021", "L" -> 311.177, "MassHI" -> 24.298, "Chi2" -> 
        36.82827916637659, "Chi2red" -> 1.3152956845134496`, "logSigma0" -> 
        9.034665828233823, "h" -> 6.759412122616764, "hn" -> 
        0.15938250701760823`, "rMax" -> 42.41, "dataPoints" -> 30|>, <|
       "Name" -> "F565-V2", "L" -> 0.559, "MassHI" -> 0.699, "Chi2" -> 
        0.8898800935463212, "Chi2red" -> 0.17797601870926427`, "logSigma0" -> 
        7.157924731610159, "h" -> 2.689286726097817, "hn" -> 
        0.3056007643292974, "rMax" -> 8.8, "dataPoints" -> 7|>, <|
       "Name" -> "F568-3", "L" -> 8.346, "MassHI" -> 3.195, "Chi2" -> 
        0.767029147496946, "Chi2red" -> 0.04793932171855912, "logSigma0" -> 
        7.790741728469687, "h" -> 4.407795312296275, "hn" -> 
        0.2451499061343868, "rMax" -> 17.98, "dataPoints" -> 18|>, <|
       "Name" -> "F568-V1", "L" -> 3.825, "MassHI" -> 2.491, "Chi2" -> 
        3.2727680425989307`, "Chi2red" -> 0.25175138789222545`, "logSigma0" -> 
        7.884475367191458, "h" -> 2.7345866336186835`, "hn" -> 
        0.15510984875885897`, "rMax" -> 17.63, "dataPoints" -> 15|>, <|
       "Name" -> "F571-8", "L" -> 10.164, "MassHI" -> 1.782, "Chi2" -> 
        2.7541116206770653`, "Chi2red" -> 0.250373783697915, "logSigma0" -> 
        9.07822515320176, "h" -> 1.0723516934590918`, "hn" -> 
        0.06896152369511843, "rMax" -> 15.55, "dataPoints" -> 13|>, <|
       "Name" -> "F571-V1", "L" -> 1.849, "MassHI" -> 1.217, "Chi2" -> 
        1.1348807306762885`, "Chi2red" -> 0.2269761461352577, "logSigma0" -> 
        7.610764176934564, "h" -> 2.728413732464736, "hn" -> 
        0.2007662790628945, "rMax" -> 13.59, "dataPoints" -> 7|>, <|
       "Name" -> "F574-1", "L" -> 6.537, "MassHI" -> 3.524, "Chi2" -> 
        6.164400475483815, "Chi2red" -> 0.5137000396236512, "logSigma0" -> 
        7.897423614544237, "h" -> 3.243289162858843, "hn" -> 
        0.25740390181419387`, "rMax" -> 12.6, "dataPoints" -> 14|>, <|
       "Name" -> "F583-1", "L" -> 0.986, "MassHI" -> 2.126, "Chi2" -> 
        6.627352469756885, "Chi2red" -> 0.28814575955464716`, "logSigma0" -> 
        7.407295967035616, "h" -> 2.4380324754385896`, "hn" -> 
        0.14994049664443967`, "rMax" -> 16.26, "dataPoints" -> 25|>, <|
       "Name" -> "F583-4", "L" -> 1.715, "MassHI" -> 0.641, "Chi2" -> 
        1.1032391388157015`, "Chi2red" -> 0.11032391388157015`, "logSigma0" -> 
        7.81379194299719, "h" -> 2.26100090571026, "hn" -> 
        0.31015101587246363`, "rMax" -> 7.29, "dataPoints" -> 12|>, <|
       "Name" -> "IC2574", "L" -> 1.016, "MassHI" -> 1.036, "Chi2" -> 
        6.509275883036182, "Chi2red" -> 0.20341487134488068`, "logSigma0" -> 
        7.239403716873039, "h" -> 3.6697049148276863`, "hn" -> 
        0.35871993302323424`, "rMax" -> 10.23, "dataPoints" -> 34|>, <|
       "Name" -> "KK98-251", "L" -> 0.085, "MassHI" -> 0.115, "Chi2" -> 
        0.4409325642528291, "Chi2red" -> 0.03391788955790993, "logSigma0" -> 
        6.941996461811354, "h" -> 1.9616301819463366`, "hn" -> 
        0.6267189079700756, "rMax" -> 3.13, "dataPoints" -> 15|>, <|
       "Name" -> "NGC0024", "L" -> 3.889, "MassHI" -> 0.676, "Chi2" -> 
        4.027589500949601, "Chi2red" -> 0.14916998151665187`, "logSigma0" -> 
        8.513540879406357, "h" -> 1.3913549675191301`, "hn" -> 
        0.12345651885706567`, "rMax" -> 11.27, "dataPoints" -> 29|>, <|
       "Name" -> "NGC0055", "L" -> 4.628, "MassHI" -> 1.565, "Chi2" -> 
        20.772946976146464`, "Chi2red" -> 1.0933129987445507`, "logSigma0" -> 
        7.769088814409937, "h" -> 3.261763948156763, "hn" -> 
        0.24161214430790837`, "rMax" -> 13.5, "dataPoints" -> 21|>, <|
       "Name" -> "NGC0100", "L" -> 3.232, "MassHI" -> 1.99, "Chi2" -> 
        2.440777889652772, "Chi2red" -> 0.12846199419225116`, "logSigma0" -> 
        8.143330638449411, "h" -> 1.8972080942640825`, "hn" -> 
        0.19721497861373, "rMax" -> 9.62, "dataPoints" -> 21|>, <|
       "Name" -> "NGC0247", "L" -> 7.332, "MassHI" -> 1.746, "Chi2" -> 
        0.7899267052357793, "Chi2red" -> 0.03291361271815747, "logSigma0" -> 
        7.852148444345313, "h" -> 4.058258499668156, "hn" -> 
        0.2791099380789654, "rMax" -> 14.54, "dataPoints" -> 26|>, <|
       "Name" -> "NGC0289", "L" -> 72.065, "MassHI" -> 27.469, "Chi2" -> 
        4.4987702405934105`, "Chi2red" -> 0.1730296246382081, "logSigma0" -> 
        9.388554489735762, "h" -> 2.127331770290717, "hn" -> 
        0.029911864036708615`, "rMax" -> 71.12, "dataPoints" -> 28|>, <|
       "Name" -> "NGC0300", "L" -> 2.922, "MassHI" -> 0.936, "Chi2" -> 
        0.33455179049351425`, "Chi2red" -> 0.014545730021457141`, "logSigma0" -> 
        8.12781299198674, "h" -> 1.8467995020682235`, "hn" -> 
        0.156508432378663, "rMax" -> 11.8, "dataPoints" -> 25|>, <|
       "Name" -> "NGC0801", "L" -> 312.57, "MassHI" -> 23.201, "Chi2" -> 
        18.893698536873416`, "Chi2red" -> 1.7176089578975833`, "logSigma0" -> 
        9.541748279766841, "h" -> 3.5241761032191525`, "hn" -> 
        0.05891300740921352, "rMax" -> 59.82, "dataPoints" -> 13|>, <|
       "Name" -> "NGC1003", "L" -> 6.82, "MassHI" -> 5.88, "Chi2" -> 
        1.0046257563662855`, "Chi2red" -> 0.02954781636371428, "logSigma0" -> 
        8.496810650950724, "h" -> 1.8443918095002079`, "hn" -> 
        0.06099179264220265, "rMax" -> 30.24, "dataPoints" -> 36|>, <|
       "Name" -> "NGC1090", "L" -> 72.045, "MassHI" -> 8.783, "Chi2" -> 
        18.826528660450403`, "Chi2red" -> 0.8557513027477456, "logSigma0" -> 
        9.00040946967923, "h" -> 3.313445216752035, "hn" -> 
        0.11011782043044317`, "rMax" -> 30.09, "dataPoints" -> 24|>, <|
       "Name" -> "NGC2403", "L" -> 10.041, "MassHI" -> 3.199, "Chi2" -> 
        11.974590401597492`, "Chi2red" -> 0.1686562028394013, "logSigma0" -> 
        8.900868614084002, "h" -> 1.3895066720506184`, "hn" -> 
        0.06657914097032192, "rMax" -> 20.87, "dataPoints" -> 73|>, <|
       "Name" -> "NGC2903", "L" -> 81.863, "MassHI" -> 2.552, "Chi2" -> 
        38.53349966575488, "Chi2red" -> 1.20417186455484, "logSigma0" -> 
        9.749870540029589, "h" -> 1.485525526800021, "hn" -> 
        0.05951624706730853, "rMax" -> 24.96, "dataPoints" -> 34|>, <|
       "Name" -> "NGC2915", "L" -> 0.641, "MassHI" -> 0.508, "Chi2" -> 
        3.9636085739983367`, "Chi2red" -> 0.14155744907136916`, "logSigma0" -> 
        8.79919584445397, "h" -> 0.398022934900803, "hn" -> 
        0.03964371861561783, "rMax" -> 10.04, "dataPoints" -> 30|>, <|
       "Name" -> "NGC2976", "L" -> 3.371, "MassHI" -> 0.172, "Chi2" -> 
        11.790178566061508`, "Chi2red" -> 0.47160714264246034`, "logSigma0" -> 
        8.60713926268462, "h" -> 2.4202499429807687`, "hn" -> 
        1.0661894021941711`, "rMax" -> 2.27, "dataPoints" -> 27|>, <|
       "Name" -> "NGC2998", "L" -> 150.902, "MassHI" -> 23.451, "Chi2" -> 
        6.1811221286006734`, "Chi2red" -> 0.5619201935091521, "logSigma0" -> 
        9.134972966247517, "h" -> 4.057401462635303, "hn" -> 
        0.09596502986365428, "rMax" -> 42.28, "dataPoints" -> 13|>, <|
       "Name" -> "NGC3109", "L" -> 0.194, "MassHI" -> 0.477, "Chi2" -> 
        1.6004983946031017`, "Chi2red" -> 0.06958688672187399, "logSigma0" -> 
        7.039360079763028, "h" -> 1.8241825321954444`, "hn" -> 
        0.2828189972396038, "rMax" -> 6.45, "dataPoints" -> 25|>, <|
       "Name" -> "NGC3198", "L" -> 38.279, "MassHI" -> 10.869, "Chi2" -> 
        87.53397710242979, "Chi2red" -> 2.1349750512787753`, "logSigma0" -> 
        8.720041952241848, "h" -> 3.3261039223666105`, "hn" -> 
        0.07545607809361639, "rMax" -> 44.08, "dataPoints" -> 43|>, <|
       "Name" -> "NGC3521", "L" -> 84.836, "MassHI" -> 4.154, "Chi2" -> 
        19.92197444819933, "Chi2red" -> 0.5108198576461366, "logSigma0" -> 
        9.794420258447902, "h" -> 1.3475697854085498`, "hn" -> 
        0.0759622201470434, "rMax" -> 17.74, "dataPoints" -> 41|>, <|
       "Name" -> "NGC3726", "L" -> 70.234, "MassHI" -> 6.473, "Chi2" -> 
        0.4613951163835554, "Chi2red" -> 0.04613951163835554, "logSigma0" -> 
        8.888030844040268, "h" -> 3.7884692366082007`, "hn" -> 
        0.11649659399164207`, "rMax" -> 32.52, "dataPoints" -> 12|>, <|
       "Name" -> "NGC3741", "L" -> 0.028, "MassHI" -> 0.182, "Chi2" -> 
        0.05560514421662669, "Chi2red" -> 0.0029265865377171942`, "logSigma0" -> 
        7.887645485334251, "h" -> 0.23493156390786865`, "hn" -> 
        0.03356165198683838, "rMax" -> 7., "dataPoints" -> 21|>, <|
       "Name" -> "NGC3769", "L" -> 18.679, "MassHI" -> 5.529, "Chi2" -> 
        0.8737358118880842, "Chi2red" -> 0.08737358118880843, "logSigma0" -> 
        9.082035267848267, "h" -> 1.528793089344284, "hn" -> 
        0.04114082587040593, "rMax" -> 37.16, "dataPoints" -> 12|>, <|
       "Name" -> "NGC3877", "L" -> 72.535, "MassHI" -> 1.483, "Chi2" -> 
        22.255283423570706`, "Chi2red" -> 2.023207583960973, "logSigma0" -> 
        8.93613070272516, "h" -> 3.9996052904300097`, "hn" -> 
        0.35238813131541935`, "rMax" -> 11.35, "dataPoints" -> 13|>, <|
       "Name" -> "NGC3893", "L" -> 58.525, "MassHI" -> 5.799, "Chi2" -> 
        2.3155059651711047`, "Chi2red" -> 0.2894382456463881, "logSigma0" -> 
        9.418981118588242, "h" -> 1.8346463883055648`, "hn" -> 
        0.09630689702391416, "rMax" -> 19.05, "dataPoints" -> 10|>, <|
       "Name" -> "NGC3917", "L" -> 21.966, "MassHI" -> 1.888, "Chi2" -> 
        7.172391346943671, "Chi2red" -> 0.4781594231295781, "logSigma0" -> 
        8.353658523384237, "h" -> 4.468414706485985, "hn" -> 
        0.3007008550798106, "rMax" -> 14.86, "dataPoints" -> 17|>, <|
       "Name" -> "NGC3949", "L" -> 38.067, "MassHI" -> 3.371, "Chi2" -> 
        0.4690548666396363, "Chi2red" -> 0.09381097332792726, "logSigma0" -> 
        9.330192919149432, "h" -> 1.5991585138754294`, "hn" -> 
        0.22618932303754305`, "rMax" -> 7.07, "dataPoints" -> 7|>, <|
       "Name" -> "NGC3953", "L" -> 141.301, "MassHI" -> 2.832, "Chi2" -> 
        0.7510174573460685, "Chi2red" -> 0.12516957622434474`, "logSigma0" -> 
        9.140356555690746, "h" -> 4.177370300019064, "hn" -> 
        0.26641392219509336`, "rMax" -> 15.68, "dataPoints" -> 8|>, <|
       "Name" -> "NGC3972", "L" -> 14.353, "MassHI" -> 1.214, "Chi2" -> 
        4.500825316943456, "Chi2red" -> 0.562603164617932, "logSigma0" -> 
        8.493098073891948, "h" -> 2.949288768339556, "hn" -> 
        0.3382211890297656, "rMax" -> 8.72, "dataPoints" -> 10|>, <|
       "Name" -> "NGC3992", "L" -> 226.932, "MassHI" -> 16.599, "Chi2" -> 
        0.7603432591054783, "Chi2red" -> 0.10862046558649689`, "logSigma0" -> 
        8.931840456998254, "h" -> 6.466877817510888, "hn" -> 
        0.1405232033357429, "rMax" -> 46.02, "dataPoints" -> 9|>, <|
       "Name" -> "NGC4010", "L" -> 17.193, "MassHI" -> 2.832, "Chi2" -> 
        5.195850440046458, "Chi2red" -> 0.5195850440046458, "logSigma0" -> 
        8.448315383424351, "h" -> 3.3463230474248915`, "hn" -> 
        0.3196106062487957, "rMax" -> 10.47, "dataPoints" -> 12|>, <|
       "Name" -> "NGC4051", "L" -> 95.268, "MassHI" -> 2.697, "Chi2" -> 
        17.287318127059088`, "Chi2red" -> 3.4574636254118176`, "logSigma0" -> 
        8.98752972020358, "h" -> 3.2665478092072027`, "hn" -> 
        0.2679694675313538, "rMax" -> 12.19, "dataPoints" -> 7|>, <|
       "Name" -> "NGC4068", "L" -> 0.236, "MassHI" -> 0.154, "Chi2" -> 
        0.6678625219124854, "Chi2red" -> 0.16696563047812135`, "logSigma0" -> 
        7.750279839240418, "h" -> 0.9467068076598887, "hn" -> 
        0.406311934617978, "rMax" -> 2.33, "dataPoints" -> 6|>, <|
       "Name" -> "NGC4085", "L" -> 21.724, "MassHI" -> 1.349, "Chi2" -> 
        0.47942033422963326`, "Chi2red" -> 0.09588406684592665, "logSigma0" -> 
        9.114817472609934, "h" -> 1.7166844558584557`, "hn" -> 
        0.2768845896545896, "rMax" -> 6.2, "dataPoints" -> 7|>, <|
       "Name" -> "NGC4088", "L" -> 107.286, "MassHI" -> 8.226, "Chi2" -> 
        4.2865041165340365`, "Chi2red" -> 0.4286504116534037, "logSigma0" -> 
        9.186994039276227, "h" -> 3.3496212025474437`, "hn" -> 
        0.15594139676664076`, "rMax" -> 21.48, "dataPoints" -> 12|>, <|
       "Name" -> "NGC4100", "L" -> 59.394, "MassHI" -> 3.102, "Chi2" -> 
        10.519530764629515`, "Chi2red" -> 0.4781604893013416, "logSigma0" -> 
        8.959098761768534, "h" -> 3.2142364427758165`, "hn" -> 
        0.14122304230122215`, "rMax" -> 22.76, "dataPoints" -> 24|>, <|
       "Name" -> "NGC4183", "L" -> 10.838, "MassHI" -> 3.506, "Chi2" -> 
        10.403537277959693`, "Chi2red" -> 0.49540653704569965`, "logSigma0" -> 
        8.240183120683806, "h" -> 3.1278186429316706`, "hn" -> 
        0.14880202868371412`, "rMax" -> 21.02, "dataPoints" -> 23|>, <|
       "Name" -> "NGC4559", "L" -> 19.377, "MassHI" -> 5.811, "Chi2" -> 
        4.691185204737222, "Chi2red" -> 0.1563728401579074, "logSigma0" -> 
        8.754458877250801, "h" -> 2.305685521167437, "hn" -> 
        0.10995162237326835`, "rMax" -> 20.97, "dataPoints" -> 32|>, <|
       "Name" -> "NGC5055", "L" -> 152.922, "MassHI" -> 11.722, "Chi2" -> 
        25.39341935334536, "Chi2red" -> 0.9766699751286678, "logSigma0" -> 
        9.590075952664973, "h" -> 2.393082524678663, "hn" -> 
        0.04383737909284966, "rMax" -> 54.59, "dataPoints" -> 28|>, <|
       "Name" -> "NGC5371", "L" -> 340.393, "MassHI" -> 11.18, "Chi2" -> 
        38.93747037116481, "Chi2red" -> 2.2904394335979297`, "logSigma0" -> 
        9.215665078445365, "h" -> 5.625784448150624, "hn" -> 
        0.1216648885845723, "rMax" -> 46.24, "dataPoints" -> 19|>, <|
       "Name" -> "NGC5585", "L" -> 2.943, "MassHI" -> 1.683, "Chi2" -> 
        20.6424028253136, "Chi2red" -> 0.9382910375142546, "logSigma0" -> 
        8.485622113657376, "h" -> 1.1993431781308181`, "hn" -> 
        0.10942912209222794`, "rMax" -> 10.96, "dataPoints" -> 24|>, <|
       "Name" -> "NGC5907", "L" -> 175.425, "MassHI" -> 21.025, "Chi2" -> 
        0.24562251011401603`, "Chi2red" -> 0.014448382947883295`, "logSigma0" -> 
        8.936784782169724, "h" -> 5.641313745111996, "hn" -> 
        0.11208650397599834`, "rMax" -> 50.33, "dataPoints" -> 19|>, <|
       "Name" -> "NGC6015", "L" -> 32.129, "MassHI" -> 5.834, "Chi2" -> 
        11.729616119875448`, "Chi2red" -> 0.27927657428274877`, "logSigma0" -> 
        8.893178896451442, "h" -> 2.531220436663147, "hn" -> 
        0.08659666221906079, "rMax" -> 29.23, "dataPoints" -> 44|>, <|
       "Name" -> "NGC6503", "L" -> 12.845, "MassHI" -> 1.744, "Chi2" -> 
        7.065250559357153, "Chi2red" -> 0.2436293296330053, "logSigma0" -> 
        9.052907500749896, "h" -> 1.3225057847346275`, "hn" -> 
        0.056276841903601174`, "rMax" -> 23.5, "dataPoints" -> 31|>, <|
       "Name" -> "NGC6789", "L" -> 0.1, "MassHI" -> 0.017, "Chi2" -> 
        0.28425027667540004`, "Chi2red" -> 0.14212513833770002`, "logSigma0" -> 
        8.076771016311149, "h" -> 0.3790954933190974, "hn" -> 
        0.5339373145339401, "rMax" -> 0.71, "dataPoints" -> 4|>, <|
       "Name" -> "NGC7793", "L" -> 7.05, "MassHI" -> 0.861, "Chi2" -> 
        52.48854836123127, "Chi2red" -> 1.192921553664347, "logSigma0" -> 
        8.910316554552203, "h" -> 1.1082677016659055`, "hn" -> 
        0.14082181723836157`, "rMax" -> 7.87, "dataPoints" -> 46|>, <|
       "Name" -> "UGC00128", "L" -> 12.02, "MassHI" -> 7.431, "Chi2" -> 
        13.28046338614664, "Chi2red" -> 0.664023169307332, "logSigma0" -> 
        7.831208833756067, "h" -> 5.227279607619265, "hn" -> 
        0.09725171363012587, "rMax" -> 53.75, "dataPoints" -> 22|>, <|
       "Name" -> "UGC00191", "L" -> 2.004, "MassHI" -> 1.343, "Chi2" -> 
        0.8169655993841181, "Chi2red" -> 0.11670937134058829`, "logSigma0" -> 
        8.047871929044737, "h" -> 1.6593189575872973`, "hn" -> 
        0.1662644246079456, "rMax" -> 9.98, "dataPoints" -> 9|>, <|
       "Name" -> "UGC00634", "L" -> 2.989, "MassHI" -> 3.663, "Chi2" -> 
        0.009158618408315982, "Chi2red" -> 0.004579309204157991, "logSigma0" -> 
        7.8629971046770715`, "h" -> 2.534688104792365, "hn" -> 
        0.1407378181450508, "rMax" -> 18.01, "dataPoints" -> 4|>, <|
       "Name" -> "UGC00731", "L" -> 0.323, "MassHI" -> 1.807, "Chi2" -> 
        0.5566363360206449, "Chi2red" -> 0.05566363360206449, "logSigma0" -> 
        6.915842705521284, "h" -> 2.5793763127928657`, "hn" -> 
        0.23642312674545057`, "rMax" -> 10.91, "dataPoints" -> 12|>, <|
       "Name" -> "UGC00891", "L" -> 0.374, "MassHI" -> 0.428, "Chi2" -> 
        0.7160518830794945, "Chi2red" -> 0.23868396102649816`, "logSigma0" -> 
        7.451473199411755, "h" -> 1.4299002755662453`, "hn" -> 
        0.19349124161924836`, "rMax" -> 7.39, "dataPoints" -> 5|>, <|
       "Name" -> "UGC01281", "L" -> 0.353, "MassHI" -> 0.294, "Chi2" -> 
        5.505343107124982, "Chi2red" -> 0.23936274378804268`, "logSigma0" -> 
        7.417062218572099, "h" -> 1.4508426446802216`, "hn" -> 
        0.29075002899403235`, "rMax" -> 4.99, "dataPoints" -> 25|>, <|
       "Name" -> "UGC02259", "L" -> 1.725, "MassHI" -> 0.494, "Chi2" -> 
        0.3796998235318516, "Chi2red" -> 0.06328330392197526, "logSigma0" -> 
        7.925340160582402, "h" -> 1.8634555866543416`, "hn" -> 
        0.2289257477462336, "rMax" -> 8.14, "dataPoints" -> 8|>, <|
       "Name" -> "UGC04278", "L" -> 1.307, "MassHI" -> 1.116, "Chi2" -> 
        7.180663026758754, "Chi2red" -> 0.31220274029385886`, "logSigma0" -> 
        7.805794407266786, "h" -> 1.8832842328640003`, "hn" -> 
        0.28150735917249625`, "rMax" -> 6.69, "dataPoints" -> 25|>, <|
       "Name" -> "UGC04325", "L" -> 2.026, "MassHI" -> 0.678, "Chi2" -> 
        1.0956838813964331`, "Chi2red" -> 0.18261398023273884`, "logSigma0" -> 
        8.011434437161277, "h" -> 2.1909865421017325`, "hn" -> 
        0.39194750305934395`, "rMax" -> 5.59, "dataPoints" -> 8|>, <|
       "Name" -> "UGC04483", "L" -> 0.013, "MassHI" -> 0.032, "Chi2" -> 
        0.22671454360952034`, "Chi2red" -> 0.03778575726825339, "logSigma0" -> 
        7.615648049828609, "h" -> 0.2208534323013527, "hn" -> 
        0.182523497769713, "rMax" -> 1.21, "dataPoints" -> 8|>, <|
       "Name" -> "UGC04499", "L" -> 1.552, "MassHI" -> 1.1, "Chi2" -> 
        3.7073961760010827`, "Chi2red" -> 0.5296280251430118, "logSigma0" -> 
        8.00188614910352, "h" -> 1.5230083446482463`, "hn" -> 
        0.18618683919905213`, "rMax" -> 8.18, "dataPoints" -> 9|>, <|
       "Name" -> "UGC05005", "L" -> 4.1, "MassHI" -> 3.093, "Chi2" -> 
        0.5183294889200443, "Chi2red" -> 0.05759216543556047, "logSigma0" -> 
        7.733621960503158, "h" -> 3.4574721725444335`, "hn" -> 
        0.12084838072507632`, "rMax" -> 28.61, "dataPoints" -> 11|>, <|
       "Name" -> "UGC05414", "L" -> 1.123, "MassHI" -> 0.574, "Chi2" -> 
        0.2284206447156819, "Chi2red" -> 0.05710516117892048, "logSigma0" -> 
        7.881144108929014, "h" -> 1.4835615985688122`, "hn" -> 
        0.360963892595818, "rMax" -> 4.11, "dataPoints" -> 6|>, <|
       "Name" -> "UGC05716", "L" -> 0.588, "MassHI" -> 1.094, "Chi2" -> 
        0.14838132347999017`, "Chi2red" -> 0.014838132347999017`, "logSigma0" -> 
        7.769624757242628, "h" -> 1.2407327328780617`, "hn" -> 
        0.10030175690202602`, "rMax" -> 12.37, "dataPoints" -> 12|>, <|
       "Name" -> "UGC05721", "L" -> 0.531, "MassHI" -> 0.562, "Chi2" -> 
        0.8275965078457661, "Chi2red" -> 0.03940935751646505, "logSigma0" -> 
        8.691179216719412, "h" -> 0.4074723593463106, "hn" -> 
        0.06045583966562471, "rMax" -> 6.74, "dataPoints" -> 23|>, <|
       "Name" -> "UGC05750", "L" -> 3.336, "MassHI" -> 1.099, "Chi2" -> 
        9.69353413162268, "Chi2red" -> 1.0770593479580755`, "logSigma0" -> 
        7.390227775685049, "h" -> 4.972055391777666, "hn" -> 
        0.21759542195963527`, "rMax" -> 22.85, "dataPoints" -> 11|>, <|
       "Name" -> "UGC05764", "L" -> 0.085, "MassHI" -> 0.163, "Chi2" -> 
        0.8045573408501026, "Chi2red" -> 0.10056966760626282`, "logSigma0" -> 
        7.176419252983142, "h" -> 0.9121012373690647, "hn" -> 
        0.2519616677815096, "rMax" -> 3.62, "dataPoints" -> 10|>, <|
       "Name" -> "UGC05829", "L" -> 0.564, "MassHI" -> 1.023, "Chi2" -> 
        0.4820942608181184, "Chi2red" -> 0.05356602897979093, "logSigma0" -> 
        7.2782452715218655`, "h" -> 2.2746682391108792`, "hn" -> 
        0.32918498395237034`, "rMax" -> 6.91, "dataPoints" -> 11|>, <|
       "Name" -> "UGC05918", "L" -> 0.233, "MassHI" -> 0.297, "Chi2" -> 
        0.4683512238161806, "Chi2red" -> 0.07805853730269677, "logSigma0" -> 
        7.172155418889425, "h" -> 1.9115600381401214`, "hn" -> 
        0.4286009054125833, "rMax" -> 4.46, "dataPoints" -> 8|>, <|
       "Name" -> "UGC05986", "L" -> 4.695, "MassHI" -> 2.667, "Chi2" -> 
        5.091693579043282, "Chi2red" -> 0.3916687368494833, "logSigma0" -> 
        8.375547453706151, "h" -> 1.8126677186383706`, "hn" -> 
        0.1926320636172551, "rMax" -> 9.41, "dataPoints" -> 15|>, <|
       "Name" -> "UGC06399", "L" -> 2.296, "MassHI" -> 0.674, "Chi2" -> 
        0.37904056051203805`, "Chi2red" -> 0.05414865150171972, "logSigma0" -> 
        7.874122377979405, "h" -> 2.467996746690109, "hn" -> 
        0.3143944900242177, "rMax" -> 7.85, "dataPoints" -> 9|>, <|
       "Name" -> "UGC06446", "L" -> 0.988, "MassHI" -> 1.379, "Chi2" -> 
        3.9904488782136354`, "Chi2red" -> 0.26602992521424235`, "logSigma0" -> 
        7.933342521895769, "h" -> 1.3167678686516686`, "hn" -> 
        0.12884225720662118`, "rMax" -> 10.22, "dataPoints" -> 17|>, <|
       "Name" -> "UGC06667", "L" -> 1.397, "MassHI" -> 0.809, "Chi2" -> 
        0.21628125876668944`, "Chi2red" -> 0.030897322680955634`, "logSigma0" -> 
        7.019901039315688, "h" -> 5.520571277787607, "hn" -> 
        0.7032574876162556, "rMax" -> 7.85, "dataPoints" -> 9|>, <|
       "Name" -> "UGC06818", "L" -> 1.588, "MassHI" -> 1.079, "Chi2" -> 
        0.17221044600718932`, "Chi2red" -> 0.028701741001198218`, "logSigma0" -> 
        8.055146534717334, "h" -> 1.4986664495054243`, "hn" -> 
        0.2147086603875966, "rMax" -> 6.98, "dataPoints" -> 8|>, <|
       "Name" -> "UGC06917", "L" -> 6.832, "MassHI" -> 2.023, "Chi2" -> 
        2.72087720177223, "Chi2red" -> 0.3023196890858033, "logSigma0" -> 
        8.262447028061558, "h" -> 2.371386382683101, "hn" -> 
        0.2264934462925598, "rMax" -> 10.47, "dataPoints" -> 11|>, <|
       "Name" -> "UGC06923", "L" -> 2.89, "MassHI" -> 0.809, "Chi2" -> 
        1.7161831245178216`, "Chi2red" -> 0.4290457811294554, "logSigma0" -> 
        8.483014366594892, "h" -> 1.1263231869055383`, "hn" -> 
        0.21827968738479422`, "rMax" -> 5.16, "dataPoints" -> 6|>, <|
       "Name" -> "UGC06930", "L" -> 8.932, "MassHI" -> 3.237, "Chi2" -> 
        4.232676002213502, "Chi2red" -> 0.5290845002766877, "logSigma0" -> 
        8.187348312660143, "h" -> 3.0253062898765104`, "hn" -> 
        0.1821376453869061, "rMax" -> 16.61, "dataPoints" -> 10|>, <|
       "Name" -> "UGC06983", "L" -> 5.298, "MassHI" -> 2.967, "Chi2" -> 
        5.871958137792789, "Chi2red" -> 0.3914638758528526, "logSigma0" -> 
        8.272503692686067, "h" -> 2.0700126487403465`, "hn" -> 
        0.132016112802318, "rMax" -> 15.68, "dataPoints" -> 17|>, <|
       "Name" -> "UGC07089", "L" -> 3.585, "MassHI" -> 1.214, "Chi2" -> 
        1.901898474506559, "Chi2red" -> 0.19018984745065592`, "logSigma0" -> 
        7.908446861974291, "h" -> 2.8766332924914204`, "hn" -> 
        0.3140429358615088, "rMax" -> 9.16, "dataPoints" -> 12|>, <|
       "Name" -> "UGC07125", "L" -> 2.712, "MassHI" -> 4.629, "Chi2" -> 
        1.8394550105109249`, "Chi2red" -> 0.16722318277372045`, "logSigma0" -> 
        7.795715618550101, "h" -> 2.5882536224589145`, "hn" -> 
        0.13855747443570207`, "rMax" -> 18.68, "dataPoints" -> 13|>, <|
       "Name" -> "UGC07151", "L" -> 2.284, "MassHI" -> 0.616, "Chi2" -> 
        2.3949767250034055`, "Chi2red" -> 0.2661085250003784, "logSigma0" -> 
        8.260079088215, "h" -> 1.3374211985529798`, "hn" -> 
        0.24316749064599633`, "rMax" -> 5.5, "dataPoints" -> 11|>, <|
       "Name" -> "UGC07232", "L" -> 0.113, "MassHI" -> 0.046, "Chi2" -> 
        1.4431785053675064`, "Chi2red" -> 0.7215892526837532, "logSigma0" -> 
        8.250113265953482, "h" -> 0.3466736325110616, "hn" -> 
        0.42277272257446535`, "rMax" -> 0.82, "dataPoints" -> 4|>, <|
       "Name" -> "UGC07261", "L" -> 1.753, "MassHI" -> 1.388, "Chi2" -> 
        7.282236429919584, "Chi2red" -> 1.4564472859839168`, "logSigma0" -> 
        8.144760140516214, "h" -> 1.4644789553888031`, "hn" -> 
        0.2195620622771819, "rMax" -> 6.67, "dataPoints" -> 7|>, <|
       "Name" -> "UGC07323", "L" -> 4.109, "MassHI" -> 0.722, "Chi2" -> 
        0.40402038543950236`, "Chi2red" -> 0.050502548179937795`, "logSigma0" -> 
        8.143115551295697, "h" -> 2.510552773908089, "hn" -> 
        0.4313664559979534, "rMax" -> 5.82, "dataPoints" -> 10|>, <|
       "Name" -> "UGC07399", "L" -> 1.156, "MassHI" -> 0.745, "Chi2" -> 
        6.233695132029802, "Chi2red" -> 0.7792118915037253, "logSigma0" -> 
        8.220788015481615, "h" -> 0.9539043935414986, "hn" -> 
        0.15561246224168002`, "rMax" -> 6.13, "dataPoints" -> 10|>, <|
       "Name" -> "UGC07524", "L" -> 2.436, "MassHI" -> 1.779, "Chi2" -> 
        36.462463119032904`, "Chi2red" -> 1.2573263144494105`, "logSigma0" -> 
        7.625964322699369, "h" -> 3.0712007888679245`, "hn" -> 
        0.2872966126162699, "rMax" -> 10.69, "dataPoints" -> 31|>, <|
       "Name" -> "UGC07559", "L" -> 0.109, "MassHI" -> 0.169, "Chi2" -> 
        0.2780153750927234, "Chi2red" -> 0.05560307501854468, "logSigma0" -> 
        7.5947385921688735`, "h" -> 0.6991483830307326, "hn" -> 
        0.2763432343994991, "rMax" -> 2.53, "dataPoints" -> 7|>, <|
       "Name" -> "UGC07577", "L" -> 0.045, "MassHI" -> 0.044, "Chi2" -> 
        0.8759017951732401, "Chi2red" -> 0.12512882788189142`, "logSigma0" -> 
        7.248608959532033, "h" -> 0.929348387563527, "hn" -> 
        0.5499102884991284, "rMax" -> 1.69, "dataPoints" -> 9|>, <|
       "Name" -> "UGC07603", "L" -> 0.376, "MassHI" -> 0.258, "Chi2" -> 
        0.1139393562749785, "Chi2red" -> 0.011393935627497851`, "logSigma0" -> 
        8.198184384202133, "h" -> 0.6077719339021904, "hn" -> 
        0.14787638294457187`, "rMax" -> 4.11, "dataPoints" -> 12|>, <|
       "Name" -> "UGC07690", "L" -> 0.858, "MassHI" -> 0.39, "Chi2" -> 
        0.519254323254674, "Chi2red" -> 0.10385086465093481`, "logSigma0" -> 
        8.65234448177203, "h" -> 0.5382764013716242, "hn" -> 
        0.13033326909724557`, "rMax" -> 4.13, "dataPoints" -> 7|>, <|
       "Name" -> "UGC07866", "L" -> 0.124, "MassHI" -> 0.118, "Chi2" -> 
        0.6235101460584628, "Chi2red" -> 0.12470202921169256`, "logSigma0" -> 
        7.583356754574695, "h" -> 0.7373008066275982, "hn" -> 
        0.31780207182224063`, "rMax" -> 2.32, "dataPoints" -> 7|>, <|
       "Name" -> "UGC08286", "L" -> 1.255, "MassHI" -> 0.642, "Chi2" -> 
        2.9621370266531084`, "Chi2red" -> 0.1974758017768739, "logSigma0" -> 
        7.960965075850026, "h" -> 1.497564111714447, "hn" -> 
        0.18626419299930935`, "rMax" -> 8.04, "dataPoints" -> 17|>, <|
       "Name" -> "UGC08490", "L" -> 1.017, "MassHI" -> 0.72, "Chi2" -> 
        1.028546786439768, "Chi2red" -> 0.03673381380142028, "logSigma0" -> 
        8.461928691811234, "h" -> 0.7382017605866849, "hn" -> 
        0.0727292374962251, "rMax" -> 10.15, "dataPoints" -> 30|>, <|
       "Name" -> "UGC08550", "L" -> 0.289, "MassHI" -> 0.288, "Chi2" -> 
        3.3182739484882724`, "Chi2red" -> 0.3686971053875858, "logSigma0" -> 
        7.994097809906418, "h" -> 0.677381336565773, "hn" -> 
        0.1263771150309278, "rMax" -> 5.36, "dataPoints" -> 11|>, <|
       "Name" -> "UGC08837", "L" -> 0.501, "MassHI" -> 0.32, "Chi2" -> 
        0.6137003423287621, "Chi2red" -> 0.10228339038812702`, "logSigma0" -> 
        7.564984280445059, "h" -> 1.8795928897628902`, "hn" -> 
        0.4475221166102119, "rMax" -> 4.2, "dataPoints" -> 8|>, <|
       "Name" -> "UGC09037", "L" -> 68.614, "MassHI" -> 19.078, "Chi2" -> 
        4.3220673887434335`, "Chi2red" -> 0.21610336943717168`, "logSigma0" -> 
        8.86129638149993, "h" -> 3.5650943082894093`, "hn" -> 
        0.1275069495096355, "rMax" -> 27.96, "dataPoints" -> 22|>, <|
       "Name" -> "UGC09992", "L" -> 0.336, "MassHI" -> 0.318, "Chi2" -> 
        0.8758811089587416, "Chi2red" -> 0.29196036965291383`, "logSigma0" -> 
        7.800541525633319, "h" -> 0.9073337379438854, "hn" -> 
        0.23324774754341526`, "rMax" -> 3.89, "dataPoints" -> 5|>, <|
       "Name" -> "UGC10310", "L" -> 1.741, "MassHI" -> 1.196, "Chi2" -> 
        1.4980418215936335`, "Chi2red" -> 0.2996083643187267, "logSigma0" -> 
        7.811383287788839, "h" -> 2.2725746159285585`, "hn" -> 
        0.29361429146363804`, "rMax" -> 7.74, "dataPoints" -> 7|>, <|
       "Name" -> "UGC11455", "L" -> 374.322, "MassHI" -> 13.335, "Chi2" -> 
        20.040986758778583`, "Chi2red" -> 0.5894407870228995, "logSigma0" -> 
        9.143913655136206, "h" -> 6.571227430623949, "hn" -> 
        0.15671899429105532`, "rMax" -> 41.93, "dataPoints" -> 36|>, <|
       "Name" -> "UGC11557", "L" -> 12.101, "MassHI" -> 2.605, "Chi2" -> 
        2.4044907029463647`, "Chi2red" -> 0.24044907029463647`, "logSigma0" -> 
        8.476239444906096, "h" -> 2.6349323320875757`, "hn" -> 
        0.24952010720526285`, "rMax" -> 10.56, "dataPoints" -> 12|>, <|
       "Name" -> "UGC11820", "L" -> 0.97, "MassHI" -> 1.977, "Chi2" -> 
        2.426662508012752, "Chi2red" -> 0.303332813501594, "logSigma0" -> 
        7.860585355200832, "h" -> 1.4282189564346028`, "hn" -> 
        0.09027932720825554, "rMax" -> 15.82, "dataPoints" -> 10|>, <|
       "Name" -> "UGC12506", "L" -> 139.571, "MassHI" -> 35.556, "Chi2" -> 
        2.203875707535728, "Chi2red" -> 0.07599571405295613, "logSigma0" -> 
        8.569014327868517, "h" -> 7.619215458872471, "hn" -> 
        0.1524147921358766, "rMax" -> 49.99, "dataPoints" -> 31|>, <|
       "Name" -> "UGC12632", "L" -> 1.301, "MassHI" -> 1.744, "Chi2" -> 
        1.9605744297171066`, "Chi2red" -> 0.15081341767054668`, "logSigma0" -> 
        7.5435762280490914`, "h" -> 2.4811562816441946`, "hn" -> 
        0.23275387257450228`, "rMax" -> 10.66, "dataPoints" -> 15|>, <|
       "Name" -> "UGC12732", "L" -> 1.667, "MassHI" -> 3.66, "Chi2" -> 
        0.5188247896240212, "Chi2red" -> 0.03705891354457294, "logSigma0" -> 
        7.771322943793275, "h" -> 2.0976293806741824`, "hn" -> 
        0.13620970004377805`, "rMax" -> 15.4, "dataPoints" -> 16|>, <|
       "Name" -> "UGCA442", "L" -> 0.14, "MassHI" -> 0.263, "Chi2" -> 
        0.47512044433778716`, "Chi2red" -> 0.07918674072296453, "logSigma0" -> 
        7.081124407065852, "h" -> 1.3922600009393855`, "hn" -> 
        0.2199462876681494, "rMax" -> 6.33, "dataPoints" -> 8|>, <|
       "Name" -> "UGCA444", "L" -> 0.012, "MassHI" -> 0.067, "Chi2" -> 
        0.535121408919582, "Chi2red" -> 0.015738864968223, "logSigma0" -> 
        6.459963945279081, "h" -> 0.9407877465094802, "hn" -> 
        0.3590792925608703, "rMax" -> 2.62, "dataPoints" -> 36|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 1, {All, "L"} -> 
        1, {All, "MassHI"} -> 1, {All, "Chi2"} -> 1, {All, "Chi2red"} -> 
        1, {All, "logSigma0"} -> 1, {All, "h"} -> 1, {All, "hn"} -> 
        1, {All, "rMax"} -> 1, {All, "dataPoints"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "L" -> TypeSystem`PackageScope`AtomShape[60], "MassHI" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2red" -> 
            TypeSystem`PackageScope`AtomShape[60], "logSigma0" -> 
            TypeSystem`PackageScope`AtomShape[60], "h" -> 
            TypeSystem`PackageScope`AtomShape[60], "hn" -> 
            TypeSystem`PackageScope`AtomShape[60], "rMax" -> 
            TypeSystem`PackageScope`AtomShape[60], "dataPoints" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "L", "MassHI", "Chi2", "Chi2red", "logSigma0", "h", "hn", 
         "rMax", "dataPoints"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 122], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 1, {All, "L"} -> 
        1, {All, "MassHI"} -> 1, {All, "Chi2"} -> 1, {All, "Chi2red"} -> 
        1, {All, "logSigma0"} -> 1, {All, "h"} -> 1, {All, "hn"} -> 
        1, {All, "rMax"} -> 1, {All, "dataPoints"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "L" -> TypeSystem`PackageScope`AtomShape[60], "MassHI" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2red" -> 
            TypeSystem`PackageScope`AtomShape[60], "logSigma0" -> 
            TypeSystem`PackageScope`AtomShape[60], "h" -> 
            TypeSystem`PackageScope`AtomShape[60], "hn" -> 
            TypeSystem`PackageScope`AtomShape[60], "rMax" -> 
            TypeSystem`PackageScope`AtomShape[60], "dataPoints" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "L", "MassHI", "Chi2", "Chi2red", "logSigma0", "h", "hn", 
         "rMax", "dataPoints"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 122], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 122, 
     "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L", 
                  Style[
                  "L", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "L"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "L"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MassHI", 
                  Style[
                  "MassHI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MassHI"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MassHI"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Chi2", 
                  Style[
                  "Chi2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Chi2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Chi2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Chi2red", 
                  Style[
                  "Chi2red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Chi2red"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Chi2red"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["logSigma0", 
                  Style[
                  "logSigma0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "logSigma0"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "logSigma0"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["h", 
                  Style[
                  "h", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "h"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "h"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hn", 
                  Style[
                  "hn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "hn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "hn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["rMax", 
                  Style[
                  "rMax", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "rMax"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "rMax"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dataPoints", 
                  Style[
                  "dataPoints", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "dataPoints"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "dataPoints"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["CamB", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.075"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.929092"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.132727"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.49614"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.750928"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.419513"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D512-2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.325"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.081"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.424845"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.212423"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.51074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.29197"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.337329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D564-8", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.033"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.029"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0131249"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00328123"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.03244"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.718289"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.23397"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D631-7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.36899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.240642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.63026"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.848329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.117987"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO064", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.157"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.211"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.23656"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.18638"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.5126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.05005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.352365"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO154", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.275"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.079159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0079159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.64627"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.430405"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0727036"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO161", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.548"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.74243"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0600839"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.61556"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.44135"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107805"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO168", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.191"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.413"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.231352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0289189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.37895"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.21088"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.293904"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO170", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.543"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.735"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.777797"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.129633"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.30903"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.02706"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.164401"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO079-G014", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51.733"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.3146"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.25497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.45744"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.92604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.295503"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO116-G012", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.292"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.083"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.25128"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.173175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.37742"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.68956"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.171355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO444-G084", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.071"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.135"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.158127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0316253"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.60606"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.52003"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.117124"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO563-G021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["311.177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.298"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.8283"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.3153"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.03467"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.75941"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.159383"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42.41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F565-V2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.559"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.699"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.88988"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.177976"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.15792"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.68929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.305601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F568-3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.346"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.767029"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0479393"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.79074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.4078"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.24515"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F568-V1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.825"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.491"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.27277"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.251751"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.88448"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.73459"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.15511"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F571-8", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.164"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.782"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.75411"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.250374"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.07823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.07235"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0689615"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F571-V1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.849"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.217"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.13488"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.226976"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.61076"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.72841"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.200766"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F574-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.537"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.524"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.1644"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5137"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.89742"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.24329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.257404"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F583-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.986"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.62735"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.288146"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.4073"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["logSigma0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.43803"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["h"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.14994"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["hn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 122, 1], {1, 122 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 122, 1], {1, 122 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[122, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[122, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 122, 1], {1, 122 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 122, 1], {1, 122 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{860., {378.41754150390625`, 385.58245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{860., {378.41754150390625`, 385.58245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8556483528317413`*^9, 3.855844066695155*^9, 
  3.8558449264264307`*^9, 3.855846352956924*^9, 3.856275056247023*^9, 
  3.856276117829685*^9, 3.85627660014968*^9, 3.856817699138207*^9, 
  3.856818035009478*^9, 3.8568184730635443`*^9, 3.85681902091143*^9, 
  3.8569010120171537`*^9, 3.8569796350436974`*^9, 3.8570393877367163`*^9, 
  3.85704124356183*^9, 3.857045783716136*^9, 3.857484451917906*^9, 
  3.868209197503392*^9, 3.868213879838112*^9, 3.868214095773909*^9, 
  3.872343108953076*^9, 3.872344583041876*^9, 3.872344650331338*^9, 
  3.872426532947345*^9, 3.872426620922223*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"3d143393-dd54-4084-9ed1-1ef47f448d69"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<headerAux.txt\>\"", ",", " ", 
     RowBox[{"{", "\n", "  ", 
      RowBox[{
      "\"\<# Additional velocity distribution: a fast sample analysis for \
dark matter or modified gravity models\>\"", ",", "\n", "  ", 
       "\"\<# by A. Hernandez-Arboleda, D. C. Rodrigues, A. Wojnar\>\"", ",", 
       "\[IndentingNewLine]", "  ", "\"\<# \>\"", ",", "\n", "  ", 
       "\"\<# The complete Table B1 data: the best fit results of an \
exponential model for the stellar component of 122 SPARC galaxies.\>\"", ",", 
       "\n", "  ", "\"\<# 1st column: galaxy name.\>\"", ",", "\n", "  ", 
       "\"\<# 2nd column: reference luminosity value from SPARC L (10^9 \
Msun), not fitted.\>\"", ",", "\n", "  ", 
       "\"\<# 3rd column: reference HI mass value from SPARC MassHI (10^9 \
Msun), not fitted.\>\"", ",", "\n", "  ", 
       "\"\<# 4th column: best-fit disk scale length h (kpc).\>\"", ",", "\n",
        "  ", "\"\<# 5th column: best-fit central surface density logSigma0 \
for Upsilon = 1 (log_10 Msun/kpc^3).\>\"", ",", "\n", "  ", 
       "\"\<# 6th column: normalized disk scale length hn.\>\"", ",", "\n", 
       "  ", "\"\<# 7th column: the minimum chi-squared value Chi2.\>\"", ",",
        "\n", "  ", 
       "\"\<# 8th column: the number of galaxy data points that were used for \
the fit dataPoints.\>\"", ",", " ", "\n", "  ", "\"\<# \>\"", ",", "\n", 
       "  ", "\"\<# \>\""}], "\n", "}"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"datasetStarsExport", " ", "=", " ", 
   RowBox[{"datasetExpVdiskNoBulge", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Name\>\"", ",", " ", "\"\<L\>\"", ",", " ", "\"\<MassHI\>\"", ",", 
       " ", "\"\<h\>\"", ",", " ", "\"\<logSigma0\>\"", ",", " ", 
       "\"\<hn\>\"", ",", " ", "\"\<Chi2\>\"", ",", " ", 
       "\"\<dataPoints\>\""}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<StellarExponentialBestFitAux.tsv\>\"", ",", " ", 
     "datasetStarsExport", ",", " ", 
     RowBox[{"Alignment", "->", " ", "Left"}], ",", " ", 
     RowBox[{"\"\<TextDelimiters\>\"", "\[Rule]", "None"}]}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Run", "[", 
    "\"\<cat headerAux.txt StellarExponentialBestFitAux.tsv > \
StellarExponentialBestFit.tsv\>\"", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "It", " ", "is", " ", "only", " ", "guaranteed", " ", "to", " ", "work", 
    " ", "in", " ", "Unix", " ", 
    RowBox[{"systems", "."}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DeleteFile", "[", "\"\<headerAux.txt\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "DeleteFile", "[", "\"\<StellarExponentialBestFitAux.tsv\>\"", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<datasetExpVdiskNoBulge.m\>\"", ",", " ", "datasetExpVdiskNoBulge"}], 
   "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.855648277486034*^9, 3.855648299962582*^9}, {
   3.855843977409341*^9, 3.855843980875237*^9}, {3.8558463287389097`*^9, 
   3.8558463303461647`*^9}, {3.855846575200954*^9, 3.855846590533021*^9}, {
   3.855846624226798*^9, 3.855846632325899*^9}, 3.855846951350564*^9, {
   3.855849082222673*^9, 3.855849095654479*^9}, {3.855927085735948*^9, 
   3.855927188776141*^9}, {3.855927220985611*^9, 3.85592727589647*^9}, {
   3.855927310288843*^9, 3.85592734754875*^9}, {3.855927416005422*^9, 
   3.855927526638777*^9}, {3.855927561965169*^9, 3.8559275866575212`*^9}, {
   3.8559276230417433`*^9, 3.855927689257972*^9}, {3.855927835610734*^9, 
   3.855927835689125*^9}, {3.855940646495206*^9, 3.8559406844060926`*^9}, {
   3.868211402122223*^9, 3.868211402470541*^9}, {3.868211439438457*^9, 
   3.8682114774867077`*^9}, {3.871394024889122*^9, 3.8713940332016077`*^9}, {
   3.8723448392572117`*^9, 3.8723448985769176`*^9}, {3.872344948212472*^9, 
   3.872345072029944*^9}, {3.872345103079472*^9, 3.8723451036747417`*^9}, {
   3.8723451340846777`*^9, 3.872345174774876*^9}, {3.8723452671602592`*^9, 
   3.8723453373494473`*^9}, {3.87234714991549*^9, 3.87234715251337*^9}, 
   3.87242663856463*^9},ExpressionUUID->"eb6989f0-d120-450c-b8d4-\
31284397365b"],

Cell[CellGroupData[{

Cell["Testing the approximations", "Subsection",
 CellChangeTimes->{{3.872348384119018*^9, 
  3.872348387223349*^9}},ExpressionUUID->"3f92c27a-ad01-4091-98a4-\
25453a89c2e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"listn", ",", " ", "listnInt", ",", " ", "listnIntDP"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listn", "[", "gal_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", " ", 
         RowBox[{"rmax", "[", "gal", "]"}]}], "#1"}], ",", " ", "#2"}], "}"}],
      " ", "&"}], " ", "@@@", " ", 
    RowBox[{"gdRBulgeless", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Rad", ",", " ", "Vdisk"}], "}"}], ",", " ", "gal"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listnInt", "[", 
    RowBox[{"gal_", ",", " ", "rn_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Quiet", "@", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"listn", "[", "gal", "]"}], ",", " ", 
       RowBox[{"Method", " ", "->", " ", "\"\<Spline\>\""}]}], "]"}], "[", 
     "rn", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listnIntDP", "[", "gal_", "]"}], " ", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rn", ",", " ", 
       RowBox[{"listnInt", "[", 
        RowBox[{"gal", ",", " ", "rn"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"rn", ",", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", " ", "30"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listnIntDPAll", " ", "=", "  ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"listnIntDP", " ", "/@", " ", 
      RowBox[{"Range", "[", "175", "]"}]}], ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"listnIntDPAll", ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "50"}], ",", " ", "400"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Axes", " ", "->", " ", "False"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "True"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.872348707014558*^9, 3.872348949287222*^9}, {
  3.872349024575407*^9, 3.872349102898466*^9}, {3.8723496348224287`*^9, 
  3.872349655995685*^9}, {3.872349698476956*^9, 3.872349783863078*^9}, {
  3.87234984497054*^9, 3.872349944774344*^9}, {3.872350024393791*^9, 
  3.872350024478318*^9}, {3.872350087606811*^9, 3.872350098989504*^9}, {
  3.872426655035049*^9, 3.872426664651641*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7c577b39-07a5-455e-a99a-ea89d1f453cc"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.9994226270339424}, {-50., 400.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8723487282980537`*^9, 3.872348738070107*^9}, 
   3.872348769785328*^9, {3.872348815161242*^9, 3.872348832536825*^9}, 
   3.8723489551788797`*^9, {3.872349091776125*^9, 3.872349103912665*^9}, {
   3.872349678055436*^9, 3.872349706130047*^9}, 3.872349786999077*^9, {
   3.872349890460917*^9, 3.872349946654502*^9}, 3.8723500263043833`*^9, {
   3.8723500961268377`*^9, 3.872350100711504*^9}, {3.8724266504069843`*^9, 
   3.872426666294186*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"c260aed9-0deb-4ff1-8868-ce744ac3a038"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"listCurves", ",", " ", "listCurve", ",", " ", "rn"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listCurve", "[", "gal_", "]"}], " ", ":=", " ", 
   RowBox[{"vExp", "[", 
    RowBox[{
     RowBox[{"rn", " ", 
      RowBox[{"rmax122", "[", "gal", "]"}]}], ",", " ", 
     RowBox[{"datasetExpVdiskNoBulge", "[", 
      RowBox[{"gal", ",", " ", "\"\<logSigma0\>\""}], "]"}], ",", " ", 
     RowBox[{"datasetExpVdiskNoBulge", "[", 
      RowBox[{"gal", ",", " ", "\"\<h\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listCurveDP", "[", "gal_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rn", ",", " ", 
      RowBox[{"listCurve", "[", "gal", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"rn", ",", " ", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", " ", "30"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listCurveDPall", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"listCurveDP", " ", "/@", " ", 
      RowBox[{"Range", " ", "@", " ", "122"}]}], ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"listCurveDPall", ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "50"}], ",", " ", "400"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Axes", " ", "->", " ", "False"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.872349195952551*^9, 3.8723492231742077`*^9}, {
  3.872349345831708*^9, 3.872349345912315*^9}, {3.872349384890483*^9, 
  3.872349473340913*^9}, {3.872349537306836*^9, 3.8723496082383537`*^9}, {
  3.872350010992669*^9, 3.87235001705618*^9}, {3.87235010297381*^9, 
  3.8723501096777887`*^9}, {3.872426671392435*^9, 3.872426673201365*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"08a6c2ec-9f9e-494f-a163-122e30112c77"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
1eqmG7qvMFbvil4BIFy/3/XeEYlrRiqSZ6bh1o3Dj/Nt3Mnzhin0/MYqNAZN
Vg0Lk/lyNPuRrvxjyBWb8RioUEHGtlt5D4yXQW+Ne9fDAid0d6nwvPx4BS6v
KR6S+f/9HLsn5cJmIXNk969D7PYYho/Pqhfcg8aoDz68qrK4ZbzykUm4F9re
HbNrH3fCdWc7bz7VIRjk4/w3Ee6EaqUav9IcpmFcafPFDrUDCikYkh4ONMCV
saDs8X4HjJ9KyjatWgPmRYqrz8UtkeJ+1V8HnlpYjiu2I0bZ470Tn7IXno7B
gQnrh0rNjsiyl82v6MMinI+LsZvftEGKs51JvOyfofXH9W0BHSccMt6cP/Jy
BfhLzl0ftLfC+vaoxsYvK3AuPdpBCaww/4547iRNA9C3NbbrJzjgB/Y2+md3
1uA+MfRrrY4l5rirc37Nn4eRxPmkbCE7FEtwXOYNKwa/8GkGGQpLDGGI8zFn
/gKMITuySmqO2DEnwHu4fQZ0zgpyyDrZYxXr8NNy8xVQ1ioqOv3ICht/XBg5
TViFda1/N8u3yPtLYjdMNIyDXJN3N425ldFel8OR9eIKOD82vKaSZoVDurmH
vAMGQHGKpeBcmRN2URT8mBL7AOVOr7kr+cj9vMZ9EqNn4er3MKtj++0ROWbo
TyqUgeY7ioxHDNboU/P6YrnHJKz5aBq5zTug3nnS+4+CvVCQ63aikfx8whYE
HBVSHoLdskI80zCiI83hv++7l6Ds0oPfjB80cTYzp4k+cxB2f9aPPVphgGJq
ZWr2I0uQ9/nFwES5JtpKnbjkyJUFLKppGQH6gBwyUfkmHPVw68rdzUI9PSyP
GLTfquyGkuUXFImVBphYb+Ki+WQeqN4JfHpyQwfFJmIk/oQtglxd/O17D7Sw
ee0s3VxTBxhLpxxNsTfAOF+J6RDdPlip+6h6bNQAw9wrLecoZ6FZYfFYo4ge
NquH01C1TcNMf0Ut9ws9xDRTl5sCw8De9XTQNsEAI7L9D9UGzYCf39u6DCs9
NFH84XJbawYq0u8ZJ3vrYdevWzz7cibghucTm6cD+ijxyaO/jGMV2ro/lfot
qqPe1SDZ9P+WYUeNjV5FTxOFz58uyO8mQlOBRf7gXy10HSuxmlavhVz3ms8F
l3Sx753cEN3BPrjpaRqRO2KAhXNbfYOKM0AUvnav5bIe3isW5x/w6oMDKxB9
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
ksfQWC+NtJJJYJttLebdVsNjYW6WqvyT0HltWeKiuzpWtTS8spBfgCu/2C48
yFFC3uSCc8fu5YCiEY9g6ndELs7PH6JqF2FEnVZG1l0R762wfCck9cI7DUY2
GkUd5Pta0HXv4wRY0Rf5yNBpYOC9+aPG1c0gQ6TmMU7WwZxs472FU71wVa3M
9v4pHaSXXyrQfD4N2g/fvOatdcLIU6f0gyjJ86vuYYDdRwfkXXzxktF9Bgjv
I7SOoxNStEQSi1iHoCQ+oPSJvTv+Mch5/bJ4BkLCk+o4Wci+JJ/7vL9sBV6T
Kn6YXLPFGp3ntvn+LdBTJ/EgjeiBdCPMbJ98xqDNqLBbeMAVORKVd32iaAFO
Oz7Bt0MeWO5uFf2znwRSu9zNvzfYIhNDls3+d1VAJdhfU0pywXKzYLZzor1w
fstb8larB0rG/esvPt8NDCfW37HyeGLUgQPT7O8HQKvn+yepPnecFCIsxGTV
QFfKy/e95A6gSNDKejR0HX5oURt78l5E3vap5rLfA5CRwHmO7qM7Iky+rhgZ
hKie/wrpAtyx53n7jb/X5uHGA7PfUmEO2MUqIfyouBMyBBkEos97IsGkW0v3
aDsQSPeqXwp5Iu9u1HH9UQ5vfZhz8h4442qOtvez06tQY+uXamZgi7Y+vntq
ygfgby+toD55fTRXLm3XXVmGyYu6wxwqdtj3bFo3JmIU7l6a2ndI1A3XWcX5
ErPIfLwkf/X0Ow/Uu6YZwlzRD2dd9r1mOuaBxJ4xy5d0ZH+uZkmuSvDAeZJr
1MqRaTCPVDq8wOqMSnQzIiM3VmBoro9W6oQBHm7Mtl70mIZWMPyvd9sU43s3
g4YiV8CSdJ/am98AZ3+yXr17thdsI1J3OtNtMXTppYRExiy8nBkXpLMzQdJa
0jI9Lwn2Uy77P8s2wFSdWe6WziV4r5O9clWEzAP3Gs+lF84Ak1aWoRq1KSZe
YF4tzp+EcKpQS9rLZrj+RnRrc9c0BDGLnu7UIaD0+daKkIVJ8Fd2JLSDGcom
WrbdyJiB12oP4uiZTBFvn3M3f9ULCyO3njPeJL9Pnm3Ckbwv4DtV0q21V3rI
Tv+5WJjsv4ERXFqwboBD9zjY6vQ6gfOUrLp/pB3WVNxrFJ7tBtX/HAyqKeww
7J2RE+lWD0zPSI8Z9tti2KM1ZcO9mWCHynPCJUaIKSk924cLgLaApVNC2AIV
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
cPiTS++ZyCWgP6Eucp6ZGf8H689bBw==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.9999420894402227}, {-50., 400.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.872350019740921*^9, 3.872350112360705*^9, 
  3.8724266757039137`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"553d57ec-1c06-4c29-b0ff-3de8aa9a3e96"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gas contribution", "Section",
 CellChangeTimes->{{3.8403097121530123`*^9, 3.840309720591474*^9}, {
   3.8403101386957083`*^9, 3.8403101520057297`*^9}, {3.8403178185208807`*^9, 
   3.840317824236273*^9}, {3.840366731141904*^9, 3.840366736485551*^9}, {
   3.84056596170426*^9, 3.8405659624024143`*^9}, {3.840657357774371*^9, 
   3.840657369068718*^9}, {3.8406675491927147`*^9, 3.840667590538075*^9}, {
   3.8469430463966303`*^9, 3.8469430464416018`*^9}, 3.8469729009044952`*^9, {
   3.868212885319879*^9, 
   3.868212887164937*^9}},ExpressionUUID->"b313ec39-f225-4fa4-8ab9-\
eb109cd9a57a"],

Cell[BoxData[
 RowBox[{"(*", "\n", 
  RowBox[{
  "hGas", " ", "is", " ", "the", " ", "h", " ", "value", " ", "for", " ", 
   "the", " ", "gas", " ", 
   RowBox[{"distribution", ".", "\n", "hGasn"}], " ", "is", " ", "the", " ", 
   "hn", " ", "value", " ", "for", " ", "the", " ", "gas", " ", 
   RowBox[{"distribution", ".", "\n", "frho"}], " ", "is", " ", "the", " ", 
   "ratio", " ", "between", " ", "the", " ", "gas", " ", "to", " ", "stellar",
    " ", "central", " ", 
   RowBox[{"density", ".", "\n", "fh"}], " ", "is", " ", "the", " ", "ratio", 
   " ", "between", " ", "hn", " ", "and", " ", 
   RowBox[{"hGasn", "."}]}], "\n", "*)"}]], "Code",
 CellChangeTimes->{{3.8562787895522223`*^9, 3.856278816013109*^9}, {
  3.856278857313177*^9, 3.856278911381024*^9}, {3.868213054294333*^9, 
  3.868213064083804*^9}},ExpressionUUID->"e7ffcf43-b4d0-4e39-b0b6-\
96dff7bdf763"],

Cell[CellGroupData[{

Cell["logSigma0gas e hGasn", "Subsubsection",
 CellChangeTimes->{{3.84693850622171*^9, 3.846938536485787*^9}, {
   3.8469391009611692`*^9, 3.846939110860648*^9}, {3.846943039399457*^9, 
   3.84694304214399*^9}, 
   3.8469728984213457`*^9},ExpressionUUID->"b96595ee-7bc1-49eb-ae18-\
c539238e12db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "associationFitExpVgas", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"associationFitExpVgas", "[", 
    RowBox[{"galaxyNumber_", ",", " ", "dataRVgas_List"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"associationFitExpVgas", "[", 
     RowBox[{"galaxyNumber", ",", " ", "dataRVgas"}], "]"}], " ", "=", " ", 
    RowBox[{"Block", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "galaxyName", ",", " ", "luminosity", ",", " ", "massHI", ",", " ", 
        "sol", ",", " ", "R", ",", " ", "h", ",", " ", "bestLogSigma0", ",", 
        " ", "besth", ",", " ", "logSigma0", ",", " ", "listModel", ",", " ", 
        "uncertainty", ",", " ", "rMax", ",", " ", "solExtended"}], "}"}], 
      ",", "\n", "  ", 
      RowBox[{
       RowBox[{"If", "[", "\n", "    ", 
        RowBox[{
         RowBox[{"dataRVgas", "==", 
          RowBox[{"{", "}"}]}], ",", " ", "\n", "    ", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "\n", "  ", "]"}], ";", "\n", "  ", 
       RowBox[{"galaxyName", " ", "=", " ", 
        RowBox[{"galaxy", "[", "galaxyNumber", "]"}]}], ";", "\n", "  ", 
       RowBox[{"luminosity", " ", "=", " ", 
        RowBox[{"globalData", "[", 
         RowBox[{"[", 
          RowBox[{"galaxyNumber", ",", " ", "colL"}], "]"}], "]"}]}], ";", 
       "\n", "  ", 
       RowBox[{"massHI", " ", "=", " ", 
        RowBox[{"globalData", "[", 
         RowBox[{"[", 
          RowBox[{"galaxyNumber", ",", " ", "colMHI"}], "]"}], "]"}]}], ";", 
       "\n", "  ", 
       RowBox[{"rMax", " ", "=", " ", 
        RowBox[{"Last", " ", "@", " ", 
         RowBox[{"dataRVgas", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}]}], ";", "\n", "  ", 
       
       RowBox[{"listModel", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"vExp", "[", 
           RowBox[{"#", " ", ",", " ", "logSigma0", ",", " ", "h"}], "]"}], 
          " ", "&"}], " ", "/@", " ", 
         RowBox[{"dataRVgas", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", "  ", 
       RowBox[{"uncertainty", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.10", " ", 
              RowBox[{"dataRVgas", "[", 
               RowBox[{"[", 
                RowBox[{"#", ",", " ", "2"}], "]"}], "]"}]}], ",", " ", "2"}],
             "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", "dataRVgas"}]}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"10", "%"}], ",", " ", 
            RowBox[{"2", " ", 
             RowBox[{"km", "/", "s"}]}]}], "]"}], " ", "uncertainty"}], ",", 
         " ", 
         RowBox[{
         "inspired", " ", "on", " ", "distance", " ", "error", " ", 
          "together", " ", "with", " ", "a", " ", "minimum", " ", 
          RowBox[{"one", "."}]}]}], "*)"}], "\n", "  ", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"NMinimize", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"chi2", "[", 
             RowBox[{"listModel", ",", " ", 
              RowBox[{"dataRVgas", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
              "uncertainty"}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{"100", " ", "rMax"}], " ", ">", " ", "h", " ", ">", " ", 
             "0.1"}], ",", " ", 
            RowBox[{"logSigma0", " ", ">", " ", "0.5"}]}], "}"}], ",", "\n", 
          "    ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"logSigma0", ",", " ", "3", ",", " ", "10"}], "}"}], ",",
             " ", 
            RowBox[{"{", 
             RowBox[{"h", ",", " ", "3", ",", " ", "30"}], "}"}]}], "}"}], 
          ",", "\n", "    ", 
          RowBox[{"Method", "->", " ", "Automatic"}]}], "\n", "  ", "]"}]}], 
       ";", "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{"logSigma0", ",", " ", "h", ",", " ", "Chi2", ",", " ", 
          RowBox[{"Number", " ", "of", " ", "data", " ", "points"}]}], " ", 
         "}"}], "*)"}], "\n", "  ", 
       RowBox[{"solExtended", " ", "=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "galaxyName", ",", " ", "luminosity", ",", " ", "massHI", ",", " ", 
           
           RowBox[{"First", "@", "sol"}], ",", " ", 
           RowBox[{
            RowBox[{"First", "@", "sol"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "dataRVgas", "]"}], " ", "-", " ", "2"}],
              ")"}]}], ",", " ", "logSigma0", ",", " ", "h", ",", " ", 
           RowBox[{"h", "/", "rMax"}], ",", " ", "rMax", ",", " ", 
           RowBox[{"Length", "[", "dataRVgas", "]"}]}], "}"}], " ", "/.", " ", 
         RowBox[{"Last", "@", "sol"}]}]}], ";", "\n", "  ", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Name\>\"", ",", " ", "\"\<L\>\"", ",", " ", "\"\<MassHI\>\"", 
           ",", " ", "\"\<Chi2\>\"", ",", " ", "\"\<Chi2red\>\"", ",", " ", 
           "\"\<logSigma0Gas\>\"", ",", " ", "\"\<hGas\>\"", ",", " ", 
           "\"\<hGasn\>\"", ",", " ", "\"\<rMax\>\"", ",", " ", 
           "\"\<dataPoints\>\""}], "}"}], ",", " ", "solExtended"}], 
        "]"}]}]}], "\n", "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8468816213205757`*^9, 3.846881649490652*^9}, {
   3.8468817186013823`*^9, 3.846881719703319*^9}, {3.8468823274149303`*^9, 
   3.846882342299479*^9}, {3.846882805494713*^9, 3.8468828055280647`*^9}, {
   3.846882921975881*^9, 3.846882935452877*^9}, {3.846882967144394*^9, 
   3.846883039537034*^9}, {3.846883074704158*^9, 3.84688307654876*^9}, {
   3.8468842790020638`*^9, 3.846884320602976*^9}, {3.846884459176661*^9, 
   3.8468844960008297`*^9}, {3.846884563707794*^9, 3.8468845646406603`*^9}, {
   3.8468849821349688`*^9, 3.846884983776578*^9}, {3.846885112767407*^9, 
   3.846885132738131*^9}, 3.846885163588689*^9, {3.8468852007169933`*^9, 
   3.846885205362575*^9}, {3.846885240307509*^9, 3.8468853321009502`*^9}, {
   3.846937186273226*^9, 3.846937287937605*^9}, {3.846937682938697*^9, 
   3.846937683016231*^9}, {3.846937818096592*^9, 3.846937824541336*^9}, {
   3.8469378693056927`*^9, 3.8469378693272038`*^9}, {3.846939169496955*^9, 
   3.8469391745136833`*^9}, {3.846939403326112*^9, 3.846939404281304*^9}, 
   3.8469394994576607`*^9, 3.8469420023242607`*^9, {3.846942036611864*^9, 
   3.8469420444877567`*^9}, {3.846942235939399*^9, 3.846942238394183*^9}, 
   3.8469430602812634`*^9, {3.8469439210069227`*^9, 3.846943923199345*^9}, {
   3.8469439893158913`*^9, 3.8469440679306107`*^9}, {3.846956378952083*^9, 
   3.846956389369273*^9}, {3.8472055909411716`*^9, 3.847205595023168*^9}, {
   3.847205961509322*^9, 3.847205971432033*^9}, {3.85593296166398*^9, 
   3.855932962516986*^9}, {3.8723477960612097`*^9, 3.872347873866633*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"6ccef853-23ff-4ade-ace8-5e55603ecafc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Echo", "[", 
   "\"\<Computing datasetExpVgasNoBulge. This takes some seconds.\>\"", "]"}],
   ";"}], "\n", 
 RowBox[{"datasetExpVgasNoBulge", " ", "=", " ", 
  RowBox[{
   RowBox[{"Dataset", "[", "\n", "  ", 
    RowBox[{"DeleteCases", "[", " ", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"associationFitExpVgas", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"gdRBulgeless", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Rad", ",", " ", "Vgas"}], "}"}], ",", " ", "#"}], 
           "]"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
       RowBox[{"Range", "[", "175", "]"}]}], ",", " ", "\n", "  ", 
      RowBox[{"{", "}"}]}], "]"}], "\n", "]"}], " ", "//", " ", 
   "EchoTiming"}]}]}], "Code",
 CellChangeTimes->{{3.846943876186145*^9, 3.846943894635687*^9}, {
  3.872347979746233*^9, 3.8723479801342278`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"bfc0f34f-3122-4203-a11d-6c54f2e37d9e"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Computing datasetExpVgasNoBulge. This takes some seconds.\"\
\>"], "Echo",
 CellChangeTimes->{
  3.872426697656221*^9},ExpressionUUID->"f795bf59-c143-4bf4-96e2-\
05b96670265c"],

Cell[BoxData["54.136086`"], "EchoTiming",
 CellChangeTimes->{
  3.872426751811927*^9},ExpressionUUID->"ea349b37-9d3a-4670-bbd6-\
beec08ca6fde"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "CamB", "L" -> 0.075, "MassHI" -> 0.012, "Chi2" -> 
        1.0515855515087371`, "Chi2red" -> 0.15022650735839102`, 
        "logSigma0Gas" -> 6.907692074947797, "hGas" -> 0.7721268129345293, 
        "hGasn" -> 0.4313557614159382, "rMax" -> 1.79, "dataPoints" -> 9|>, <|
       "Name" -> "D512-2", "L" -> 0.325, "MassHI" -> 0.081, "Chi2" -> 
        0.0004480532250671316, "Chi2red" -> 0.0002240266125335658, 
        "logSigma0Gas" -> 6.415832739485048, "hGas" -> 2.655423860971871, 
        "hGasn" -> 0.6933221569117156, "rMax" -> 3.83, "dataPoints" -> 4|>, <|
       "Name" -> "D564-8", "L" -> 0.033, "MassHI" -> 0.029, "Chi2" -> 
        0.0021489588885292886`, "Chi2red" -> 0.0005372397221323222, 
        "logSigma0Gas" -> 6.553965646752247, "hGas" -> 1.3393393117022165`, 
        "hGasn" -> 0.4362668767759663, "rMax" -> 3.07, "dataPoints" -> 6|>, <|
       "Name" -> "D631-7", "L" -> 0.196, "MassHI" -> 0.29, "Chi2" -> 
        0.06191845372135958, "Chi2red" -> 0.004422746694382827, 
        "logSigma0Gas" -> 7.433126077833704, "hGas" -> 1.5012738804631165`, 
        "hGasn" -> 0.208800261538681, "rMax" -> 7.19, "dataPoints" -> 16|>, <|
       "Name" -> "DDO064", "L" -> 0.157, "MassHI" -> 0.211, "Chi2" -> 
        39.69127517022908, "Chi2red" -> 3.3076062641857567`, "logSigma0Gas" -> 
        8.443377768597646, "hGas" -> 298., "hGasn" -> 100., "rMax" -> 2.98, 
        "dataPoints" -> 14|>, <|
       "Name" -> "DDO154", "L" -> 0.053, "MassHI" -> 0.275, "Chi2" -> 
        2.997666996137456, "Chi2red" -> 0.2997666996137456, "logSigma0Gas" -> 
        7.056415823168078, "hGas" -> 2.461530923676012, "hGasn" -> 
        0.41579914251283984`, "rMax" -> 5.92, "dataPoints" -> 12|>, <|
       "Name" -> "DDO161", "L" -> 0.548, "MassHI" -> 1.378, "Chi2" -> 
        4.2997833917603545`, "Chi2red" -> 0.14826839281932258`, 
        "logSigma0Gas" -> 7.342764437314823, "hGas" -> 4.272322696829403, 
        "hGasn" -> 0.319545452268467, "rMax" -> 13.37, "dataPoints" -> 31|>, <|
       "Name" -> "DDO168", "L" -> 0.191, "MassHI" -> 0.413, "Chi2" -> 
        1.8343272263072399`, "Chi2red" -> 0.22929090328840498`, 
        "logSigma0Gas" -> 7.6207720818649785`, "hGas" -> 1.232237926716808, 
        "hGasn" -> 0.299086875416701, "rMax" -> 4.12, "dataPoints" -> 10|>, <|
       "Name" -> "DDO170", "L" -> 0.543, "MassHI" -> 0.735, "Chi2" -> 
        4.4106119563431525`, "Chi2red" -> 0.7351019927238587, "logSigma0Gas" -> 
        7.026766097849587, "hGas" -> 6.974068743364038, "hGasn" -> 
        0.5656179029492325, "rMax" -> 12.33, "dataPoints" -> 8|>, <|
       "Name" -> "ESO079-G014", "L" -> 51.733, "MassHI" -> 3.14, "Chi2" -> 
        28.901214574740735`, "Chi2red" -> 2.2231703519031334`, "logSigma0Gas" -> 
        8.073410276119672, "hGas" -> 1667.0000000000002`, "hGasn" -> 100., 
        "rMax" -> 16.67, "dataPoints" -> 15|>, <|
       "Name" -> "ESO116-G012", "L" -> 4.292, "MassHI" -> 1.083, "Chi2" -> 
        43.40901896973725, "Chi2red" -> 3.339155305364404, "logSigma0Gas" -> 
        8.262513992766014, "hGas" -> 696.1212248167598, "hGasn" -> 
        70.60052990027991, "rMax" -> 9.86, "dataPoints" -> 15|>, <|
       "Name" -> "ESO444-G084", "L" -> 0.071, "MassHI" -> 0.135, "Chi2" -> 
        3.268269205046498, "Chi2red" -> 0.6536538410092997, "logSigma0Gas" -> 
        7.44943818426168, "hGas" -> 1.1305783965239775`, "hGasn" -> 
        0.2546347739918868, "rMax" -> 4.44, "dataPoints" -> 7|>, <|
       "Name" -> "ESO563-G021", "L" -> 311.177, "MassHI" -> 24.298, "Chi2" -> 
        457.4949757550605, "Chi2red" -> 16.339106276966447`, "logSigma0Gas" -> 
        7.834579111143274, "hGas" -> 4241., "hGasn" -> 100.00000000000001`, 
        "rMax" -> 42.41, "dataPoints" -> 30|>, <|
       "Name" -> "F565-V2", "L" -> 0.559, "MassHI" -> 0.699, "Chi2" -> 
        0.034804749497439356`, "Chi2red" -> 0.0069609498994878715`, 
        "logSigma0Gas" -> 7.104935280802967, "hGas" -> 25.556890601535567`, 
        "hGasn" -> 2.90419211381086, "rMax" -> 8.8, "dataPoints" -> 7|>, <|
       "Name" -> "F568-3", "L" -> 8.346, "MassHI" -> 3.195, "Chi2" -> 
        65.32863457498406, "Chi2red" -> 4.083039660936504, "logSigma0Gas" -> 
        8.075013389771684, "hGas" -> 1798., "hGasn" -> 100., "rMax" -> 17.98, 
        "dataPoints" -> 18|>, <|
       "Name" -> "F568-V1", "L" -> 3.825, "MassHI" -> 2.491, "Chi2" -> 
        56.040432071254855`, "Chi2red" -> 4.310802467019604, "logSigma0Gas" -> 
        8.053851927847269, "hGas" -> 1763., "hGasn" -> 100., "rMax" -> 17.63, 
        "dataPoints" -> 15|>, <|
       "Name" -> "F571-8", "L" -> 10.164, "MassHI" -> 1.782, "Chi2" -> 
        0.14529460933087918`, "Chi2red" -> 0.013208600848261743`, 
        "logSigma0Gas" -> 6.29444189234376, "hGas" -> 6.596883475671977, 
        "hGasn" -> 0.42423687946443583`, "rMax" -> 15.55, "dataPoints" -> 
        13|>, <|"Name" -> "F571-V1", "L" -> 1.849, "MassHI" -> 1.217, "Chi2" -> 
        2.6050164845049326`, "Chi2red" -> 0.5210032969009866, "logSigma0Gas" -> 
        6.997757090990055, "hGas" -> 12.490262709219486`, "hGasn" -> 
        0.9190774620470556, "rMax" -> 13.59, "dataPoints" -> 7|>, <|
       "Name" -> "F574-1", "L" -> 6.537, "MassHI" -> 3.524, "Chi2" -> 
        25.311717524169026`, "Chi2red" -> 2.109309793680752, "logSigma0Gas" -> 
        7.873560259724722, "hGas" -> 1260., "hGasn" -> 100., "rMax" -> 12.6, 
        "dataPoints" -> 14|>, <|
       "Name" -> "F583-1", "L" -> 0.986, "MassHI" -> 2.126, "Chi2" -> 
        273.47803904325264`, "Chi2red" -> 11.89034952361968, "logSigma0Gas" -> 
        7.8856895685045005`, "hGas" -> 1626.0000000000002`, "hGasn" -> 100., 
        "rMax" -> 16.26, "dataPoints" -> 25|>, <|
       "Name" -> "F583-4", "L" -> 1.715, "MassHI" -> 0.641, "Chi2" -> 
        0.1703010631958029, "Chi2red" -> 0.017030106319580293`, 
        "logSigma0Gas" -> 7.664522970249342, "hGas" -> 728.9999946847893, 
        "hGasn" -> 99.99999927089016, "rMax" -> 7.29, "dataPoints" -> 12|>, <|
       "Name" -> "IC2574", "L" -> 1.016, "MassHI" -> 1.036, "Chi2" -> 
        19.469756807198607`, "Chi2red" -> 0.6084299002249565, "logSigma0Gas" -> 
        7.971962719277355, "hGas" -> 1023., "hGasn" -> 100., "rMax" -> 10.23, 
        "dataPoints" -> 34|>, <|
       "Name" -> "KK98-251", "L" -> 0.085, "MassHI" -> 0.115, "Chi2" -> 
        6.267571266681945, "Chi2red" -> 0.482120866667842, "logSigma0Gas" -> 
        7.206518165937256, "hGas" -> 3.8045343021905706`, "hGasn" -> 
        1.215506166834048, "rMax" -> 3.13, "dataPoints" -> 15|>, <|
       "Name" -> "NGC0024", "L" -> 3.889, "MassHI" -> 0.676, "Chi2" -> 
        12.426739241465935`, "Chi2red" -> 0.4602496015357753, "logSigma0Gas" -> 
        7.103845894766424, "hGas" -> 4.1632133420828055`, "hGasn" -> 
        0.36940668518924624`, "rMax" -> 11.27, "dataPoints" -> 29|>, <|
       "Name" -> "NGC0055", "L" -> 4.628, "MassHI" -> 1.565, "Chi2" -> 
        6.589334860518983, "Chi2red" -> 0.3468070979220517, "logSigma0Gas" -> 
        7.4755293575687185`, "hGas" -> 4.626135039520407, "hGasn" -> 
        0.3426766695941042, "rMax" -> 13.5, "dataPoints" -> 21|>, <|
       "Name" -> "NGC0100", "L" -> 3.232, "MassHI" -> 1.99, "Chi2" -> 
        70.198012454298, "Chi2red" -> 3.694632234436736, "logSigma0Gas" -> 
        7.880644786382645, "hGas" -> 961.9999999999999, "hGasn" -> 100., 
        "rMax" -> 9.62, "dataPoints" -> 21|>, <|
       "Name" -> "NGC0247", "L" -> 7.332, "MassHI" -> 1.746, "Chi2" -> 
        23.61103584635252, "Chi2red" -> 0.9837931602646883, "logSigma0Gas" -> 
        8.216337619289838, "hGas" -> 1454., "hGasn" -> 100.00000000000001`, 
        "rMax" -> 14.54, "dataPoints" -> 26|>, <|
       "Name" -> "NGC0289", "L" -> 72.065, "MassHI" -> 27.469, "Chi2" -> 
        136.28609588001962`, "Chi2red" -> 5.241772918462293, "logSigma0Gas" -> 
        6.966953900788018, "hGas" -> 60.07610435670438, "hGasn" -> 
        0.8447146281876318, "rMax" -> 71.12, "dataPoints" -> 28|>, <|
       "Name" -> "NGC0300", "L" -> 2.922, "MassHI" -> 0.936, "Chi2" -> 
        80.19982250215912, "Chi2red" -> 3.4869488044417007`, "logSigma0Gas" -> 
        7.221498158008344, "hGas" -> 97.6778074790997, "hGasn" -> 
        8.277780294838957, "rMax" -> 11.8, "dataPoints" -> 25|>, <|
       "Name" -> "NGC0801", "L" -> 312.57, "MassHI" -> 23.201, "Chi2" -> 
        9.707534046031537, "Chi2red" -> 0.8825030950937761, "logSigma0Gas" -> 
        7.027098463514981, "hGas" -> 59.487994219980514`, "hGasn" -> 
        0.9944499200932886, "rMax" -> 59.82, "dataPoints" -> 13|>, <|
       "Name" -> "NGC1003", "L" -> 6.82, "MassHI" -> 5.88, "Chi2" -> 
        49.6965417095761, "Chi2red" -> 1.4616629914581207`, "logSigma0Gas" -> 
        6.9917097392261915`, "hGas" -> 9.010825078313907, "hGasn" -> 
        0.29797701978551283`, "rMax" -> 30.24, "dataPoints" -> 36|>, <|
       "Name" -> "NGC1090", "L" -> 72.045, "MassHI" -> 8.783, "Chi2" -> 
        461.5869050220398, "Chi2red" -> 20.981222955547263`, "logSigma0Gas" -> 
        8.037172998071451, "hGas" -> 3009., "hGasn" -> 100., "rMax" -> 30.09, 
        "dataPoints" -> 24|>, <|
       "Name" -> "NGC2403", "L" -> 10.041, "MassHI" -> 3.199, "Chi2" -> 
        172.25191421541314`, "Chi2red" -> 2.426083298808636, "logSigma0Gas" -> 
        7.193600486613919, "hGas" -> 18.551044299832434`, "hGasn" -> 
        0.8888856875818127, "rMax" -> 20.87, "dataPoints" -> 73|>, <|
       "Name" -> "NGC2903", "L" -> 81.863, "MassHI" -> 2.552, "Chi2" -> 
        80.34934506907246, "Chi2red" -> 2.5109170334085142`, "logSigma0Gas" -> 
        7.031387381211038, "hGas" -> 9.838493751602977, "hGasn" -> 
        0.39417042274050385`, "rMax" -> 24.96, "dataPoints" -> 34|>, <|
       "Name" -> "NGC2915", "L" -> 0.641, "MassHI" -> 0.508, "Chi2" -> 
        22.147285015182373`, "Chi2red" -> 0.7909744648279419, "logSigma0Gas" -> 
        6.875375188304087, "hGas" -> 4.204563107827833, "hGasn" -> 
        0.41878118603862885`, "rMax" -> 10.04, "dataPoints" -> 30|>, <|
       "Name" -> "NGC2976", "L" -> 3.371, "MassHI" -> 0.172, "Chi2" -> 
        58.27957194290699, "Chi2red" -> 2.3311828777162797`, "logSigma0Gas" -> 
        8.740466186320742, "hGas" -> 227., "hGasn" -> 100., "rMax" -> 2.27, 
        "dataPoints" -> 27|>, <|
       "Name" -> "NGC2998", "L" -> 150.902, "MassHI" -> 23.451, "Chi2" -> 
        19.311188867654998`, "Chi2red" -> 1.7555626243322726`, "logSigma0Gas" -> 
        7.554788543327546, "hGas" -> 367.49478734881154`, "hGasn" -> 
        8.691929691315316, "rMax" -> 42.28, "dataPoints" -> 13|>, <|
       "Name" -> "NGC3109", "L" -> 0.194, "MassHI" -> 0.477, "Chi2" -> 
        4.179578852581928, "Chi2red" -> 0.18172081967747514`, "logSigma0Gas" -> 
        6.968553610482011, "hGas" -> 4.207465956187084, "hGasn" -> 
        0.6523203032848193, "rMax" -> 6.45, "dataPoints" -> 25|>, <|
       "Name" -> "NGC3198", "L" -> 38.279, "MassHI" -> 10.869, "Chi2" -> 
        192.38400059718572`, "Chi2red" -> 4.692292697492335, "logSigma0Gas" -> 
        7.356111327972911, "hGas" -> 448.0381281641875, "hGasn" -> 
        10.16420435944164, "rMax" -> 44.08, "dataPoints" -> 43|>, <|
       "Name" -> "NGC3521", "L" -> 84.836, "MassHI" -> 4.154, "Chi2" -> 
        1181.453181041989, "Chi2red" -> 30.293671308768946`, "logSigma0Gas" -> 
        8.11345541690114, "hGas" -> 1773.9999999999998`, "hGasn" -> 100., 
        "rMax" -> 17.74, "dataPoints" -> 41|>, <|
       "Name" -> "NGC3726", "L" -> 70.234, "MassHI" -> 6.473, "Chi2" -> 
        144.79571474272697`, "Chi2red" -> 14.479571474272698`, "logSigma0Gas" -> 
        7.013839520813871, "hGas" -> 79.33163587545239, "hGasn" -> 
        2.43947219789214, "rMax" -> 32.52, "dataPoints" -> 12|>, <|
       "Name" -> "NGC3741", "L" -> 0.028, "MassHI" -> 0.182, "Chi2" -> 
        2.1478698572813095`, "Chi2red" -> 0.11304578196217419`, 
        "logSigma0Gas" -> 6.828430042078135, "hGas" -> 2.58362265818587, 
        "hGasn" -> 0.36908895116941, "rMax" -> 7., "dataPoints" -> 21|>, <|
       "Name" -> "NGC3769", "L" -> 18.679, "MassHI" -> 5.529, "Chi2" -> 
        5.697371683818177, "Chi2red" -> 0.5697371683818176, "logSigma0Gas" -> 
        7.265614900153774, "hGas" -> 7.553652705534242, "hGasn" -> 
        0.20327375418552862`, "rMax" -> 37.16, "dataPoints" -> 12|>, <|
       "Name" -> "NGC3877", "L" -> 72.535, "MassHI" -> 1.483, "Chi2" -> 
        40.199346780568995`, "Chi2red" -> 3.654486070960818, "logSigma0Gas" -> 
        8.1688658508436, "hGas" -> 1135., "hGasn" -> 100., "rMax" -> 11.35, 
        "dataPoints" -> 13|>, <|
       "Name" -> "NGC3893", "L" -> 58.525, "MassHI" -> 5.799, "Chi2" -> 
        20.81712433258345, "Chi2red" -> 2.6021405415729313`, "logSigma0Gas" -> 
        7.344771308009623, "hGas" -> 9.003409345779072, "hGasn" -> 
        0.4726199131642558, "rMax" -> 19.05, "dataPoints" -> 10|>, <|
       "Name" -> "NGC3917", "L" -> 21.966, "MassHI" -> 1.888, "Chi2" -> 
        34.223766095075966`, "Chi2red" -> 2.2815844063383977`, "logSigma0Gas" -> 
        8.100806355007732, "hGas" -> 1486., "hGasn" -> 100., "rMax" -> 14.86, 
        "dataPoints" -> 17|>, <|
       "Name" -> "NGC3949", "L" -> 38.067, "MassHI" -> 3.371, "Chi2" -> 
        19.308915877371756`, "Chi2red" -> 3.8617831754743515`, "logSigma0Gas" -> 
        8.612079182646834, "hGas" -> 707., "hGasn" -> 100., "rMax" -> 7.07, 
        "dataPoints" -> 7|>, <|
       "Name" -> "NGC3953", "L" -> 141.301, "MassHI" -> 2.832, "Chi2" -> 
        110.03349568376152`, "Chi2red" -> 18.338915947293586`, "logSigma0Gas" -> 
        7.741578877192152, "hGas" -> 1568., "hGasn" -> 100., "rMax" -> 15.68, 
        "dataPoints" -> 8|>, <|
       "Name" -> "NGC3972", "L" -> 14.353, "MassHI" -> 1.214, "Chi2" -> 
        8.86414225698823, "Chi2red" -> 1.1080177821235289`, "logSigma0Gas" -> 
        8.240152632116748, "hGas" -> 872.0000000000001, "hGasn" -> 100., 
        "rMax" -> 8.72, "dataPoints" -> 10|>, <|
       "Name" -> "NGC3992", "L" -> 226.932, "MassHI" -> 16.599, "Chi2" -> 
        112.29096381957847`, "Chi2red" -> 16.04156625993978, "logSigma0Gas" -> 
        7.930405541418902, "hGas" -> 4602., "hGasn" -> 100., "rMax" -> 46.02, 
        "dataPoints" -> 9|>, <|
       "Name" -> "NGC4010", "L" -> 17.193, "MassHI" -> 2.832, "Chi2" -> 
        11.021179719042454`, "Chi2red" -> 1.1021179719042455`, "logSigma0Gas" -> 
        7.330649068201532, "hGas" -> 33.38123725343957, "hGasn" -> 
        3.188274809306549, "rMax" -> 10.47, "dataPoints" -> 12|>, <|
       "Name" -> "NGC4051", "L" -> 95.268, "MassHI" -> 2.697, "Chi2" -> 
        52.464731615465226`, "Chi2red" -> 10.492946323093046`, "logSigma0Gas" -> 
        8.069336891897995, "hGas" -> 1219., "hGasn" -> 100., "rMax" -> 12.19, 
        "dataPoints" -> 7|>, <|
       "Name" -> "NGC4068", "L" -> 0.236, "MassHI" -> 0.154, "Chi2" -> 
        2.4786586728845306`, "Chi2red" -> 0.6196646682211326, "logSigma0Gas" -> 
        8.375648012790652, "hGas" -> 233., "hGasn" -> 100., "rMax" -> 2.33, 
        "dataPoints" -> 6|>, <|
       "Name" -> "NGC4085", "L" -> 21.724, "MassHI" -> 1.349, "Chi2" -> 
        11.359862755292635`, "Chi2red" -> 2.271972551058527, "logSigma0Gas" -> 
        8.218631613833397, "hGas" -> 517.0782857649124, "hGasn" -> 
        83.39972351046974, "rMax" -> 6.2, "dataPoints" -> 7|>, <|
       "Name" -> "NGC4088", "L" -> 107.286, "MassHI" -> 8.226, "Chi2" -> 
        98.02593364271513, "Chi2red" -> 9.802593364271514, "logSigma0Gas" -> 
        8.47249755666887, "hGas" -> 2148., "hGasn" -> 100., "rMax" -> 21.48, 
        "dataPoints" -> 12|>, <|
       "Name" -> "NGC4100", "L" -> 59.394, "MassHI" -> 3.102, "Chi2" -> 
        18.3570565379963, "Chi2red" -> 0.8344116608180137, "logSigma0Gas" -> 
        6.946104710022818, "hGas" -> 19.92912526639176, "hGasn" -> 
        0.8756206180312723, "rMax" -> 22.76, "dataPoints" -> 24|>, <|
       "Name" -> "NGC4183", "L" -> 10.838, "MassHI" -> 3.506, "Chi2" -> 
        30.429943733842318`, "Chi2red" -> 1.449044939706777, "logSigma0Gas" -> 
        7.1283757934151515`, "hGas" -> 11.671048624211593`, "hGasn" -> 
        0.5552354245581158, "rMax" -> 21.02, "dataPoints" -> 23|>, <|
       "Name" -> "NGC4559", "L" -> 19.377, "MassHI" -> 5.811, "Chi2" -> 
        76.35654119033417, "Chi2red" -> 2.5452180396778057`, "logSigma0Gas" -> 
        7.600021780796306, "hGas" -> 167.56026371229743`, "hGasn" -> 
        7.9904751412635875`, "rMax" -> 20.97, "dataPoints" -> 32|>, <|
       "Name" -> "NGC5055", "L" -> 152.922, "MassHI" -> 11.722, "Chi2" -> 
        89.01882144550625, "Chi2red" -> 3.4238008248271634`, "logSigma0Gas" -> 
        6.9088786517526595`, "hGas" -> 23.538584636472557`, "hGasn" -> 
        0.43118858099418494`, "rMax" -> 54.59, "dataPoints" -> 28|>, <|
       "Name" -> "NGC5371", "L" -> 340.393, "MassHI" -> 11.18, "Chi2" -> 
        232.74616426243233`, "Chi2red" -> 13.690950838966607`, "logSigma0Gas" -> 
        7.984499400294479, "hGas" -> 4624., "hGasn" -> 99.99999999999999, 
        "rMax" -> 46.24, "dataPoints" -> 19|>, <|
       "Name" -> "NGC5585", "L" -> 2.943, "MassHI" -> 1.683, "Chi2" -> 
        13.260699370478203`, "Chi2red" -> 0.6027590622944639, "logSigma0Gas" -> 
        8.184394951916893, "hGas" -> 800.0829423557913, "hGasn" -> 
        73.00026846311964, "rMax" -> 10.96, "dataPoints" -> 24|>, <|
       "Name" -> "NGC5907", "L" -> 175.425, "MassHI" -> 21.025, "Chi2" -> 
        184.22333212106105`, "Chi2red" -> 10.836666595356531`, "logSigma0Gas" -> 
        8.169376781846166, "hGas" -> 5033., "hGasn" -> 100., "rMax" -> 50.33, 
        "dataPoints" -> 19|>, <|
       "Name" -> "NGC6015", "L" -> 32.129, "MassHI" -> 5.834, "Chi2" -> 
        739.2668952748281, "Chi2red" -> 17.601592744638765`, "logSigma0Gas" -> 
        8.156279448269311, "hGas" -> 2923., "hGasn" -> 99.99999999999999, 
        "rMax" -> 29.23, "dataPoints" -> 44|>, <|
       "Name" -> "NGC6503", "L" -> 12.845, "MassHI" -> 1.744, "Chi2" -> 
        5.31279265728573, "Chi2red" -> 0.1831997468029562, "logSigma0Gas" -> 
        6.907614880445456, "hGas" -> 8.96972459162428, "hGasn" -> 
        0.38169040815422467`, "rMax" -> 23.5, "dataPoints" -> 31|>, <|
       "Name" -> "NGC6789", "L" -> 0.1, "MassHI" -> 0.017, "Chi2" -> 
        0.22659178838462266`, "Chi2red" -> 0.11329589419231133`, 
        "logSigma0Gas" -> 7.445318475448434, "hGas" -> 0.7432089944610846, 
        "hGasn" -> 1.0467732316353304`, "rMax" -> 0.71, "dataPoints" -> 4|>, <|
       "Name" -> "NGC7793", "L" -> 7.05, "MassHI" -> 0.861, "Chi2" -> 
        85.63597764516389, "Chi2red" -> 1.9462722192082702`, "logSigma0Gas" -> 
        7.666689285946744, "hGas" -> 46.456213558863574`, "hGasn" -> 
        5.902949626285079, "rMax" -> 7.87, "dataPoints" -> 46|>, <|
       "Name" -> "UGC00128", "L" -> 12.02, "MassHI" -> 7.431, "Chi2" -> 
        70.86876612981354, "Chi2red" -> 3.543438306490677, "logSigma0Gas" -> 
        6.68834230623316, "hGas" -> 43.47121270170118, "hGasn" -> 
        0.8087667479386266, "rMax" -> 53.75, "dataPoints" -> 22|>, <|
       "Name" -> "UGC00191", "L" -> 2.004, "MassHI" -> 1.343, "Chi2" -> 
        6.53803497286966, "Chi2red" -> 0.9340049961242372, "logSigma0Gas" -> 
        8.117810708805719, "hGas" -> 514.6092954326566, "hGasn" -> 
        51.56405765858282, "rMax" -> 9.98, "dataPoints" -> 9|>, <|
       "Name" -> "UGC00634", "L" -> 2.989, "MassHI" -> 3.663, "Chi2" -> 
        2.3710496509580787`, "Chi2red" -> 1.1855248254790394`, "logSigma0Gas" -> 
        7.135030184147399, "hGas" -> 11.17812219752173, "hGasn" -> 
        0.6206619765420172, "rMax" -> 18.01, "dataPoints" -> 4|>, <|
       "Name" -> "UGC00731", "L" -> 0.323, "MassHI" -> 1.807, "Chi2" -> 
        10.7877109490469, "Chi2red" -> 1.07877109490469, "logSigma0Gas" -> 
        8.294367330483206, "hGas" -> 1091., "hGasn" -> 100., "rMax" -> 10.91, 
        "dataPoints" -> 12|>, <|
       "Name" -> "UGC00891", "L" -> 0.374, "MassHI" -> 0.428, "Chi2" -> 
        2.896050072686127, "Chi2red" -> 0.965350024228709, "logSigma0Gas" -> 
        7.1338216222965825`, "hGas" -> 3.471285432675144, "hGasn" -> 
        0.4697273927841873, "rMax" -> 7.39, "dataPoints" -> 5|>, <|
       "Name" -> "UGC01281", "L" -> 0.353, "MassHI" -> 0.294, "Chi2" -> 
        160.7236481357361, "Chi2red" -> 6.987984701553744, "logSigma0Gas" -> 
        8.130968931256687, "hGas" -> 499., "hGasn" -> 99.99999999999999, 
        "rMax" -> 4.99, "dataPoints" -> 25|>, <|
       "Name" -> "UGC02259", "L" -> 1.725, "MassHI" -> 0.494, "Chi2" -> 
        4.33478248196151, "Chi2red" -> 0.7224637469935851, "logSigma0Gas" -> 
        7.1368104412086835`, "hGas" -> 18.181454439735923`, "hGasn" -> 
        2.2335939115154693`, "rMax" -> 8.14, "dataPoints" -> 8|>, <|
       "Name" -> "UGC04278", "L" -> 1.307, "MassHI" -> 1.116, "Chi2" -> 
        757.085919397865, "Chi2red" -> 32.916779104255, "logSigma0Gas" -> 
        6.8124198738770145`, "hGas" -> 669., "hGasn" -> 99.99999999999999, 
        "rMax" -> 6.69, "dataPoints" -> 25|>, <|
       "Name" -> "UGC04325", "L" -> 2.026, "MassHI" -> 0.678, "Chi2" -> 
        7.442324004937083, "Chi2red" -> 1.2403873341561804`, "logSigma0Gas" -> 
        7.838329256407714, "hGas" -> 84.46832762541139, "hGasn" -> 
        15.110613170914382`, "rMax" -> 5.59, "dataPoints" -> 8|>, <|
       "Name" -> "UGC04483", "L" -> 0.013, "MassHI" -> 0.032, "Chi2" -> 
        0.30974195105926566`, "Chi2red" -> 0.05162365850987761, 
        "logSigma0Gas" -> 7.269326328025095, "hGas" -> 0.9991332678122531, 
        "hGasn" -> 0.8257299733985562, "rMax" -> 1.21, "dataPoints" -> 8|>, <|
       "Name" -> "UGC04499", "L" -> 1.552, "MassHI" -> 1.1, "Chi2" -> 
        31.22365126606121, "Chi2red" -> 4.460521609437316, "logSigma0Gas" -> 
        8.068172910125549, "hGas" -> 313.1071991925908, "hGasn" -> 
        38.27716371547565, "rMax" -> 8.18, "dataPoints" -> 9|>, <|
       "Name" -> "UGC05005", "L" -> 4.1, "MassHI" -> 3.093, "Chi2" -> 
        0.9928333645036502, "Chi2red" -> 0.11031481827818335`, "logSigma0Gas" -> 
        6.894901175545428, "hGas" -> 27.133305999981225`, "hGasn" -> 
        0.9483853897232166, "rMax" -> 28.61, "dataPoints" -> 11|>, <|
       "Name" -> "UGC05414", "L" -> 1.123, "MassHI" -> 0.574, "Chi2" -> 
        8.399112344391428, "Chi2red" -> 2.099778086097857, "logSigma0Gas" -> 
        7.412927671652752, "hGas" -> 15.760661262684312`, "hGasn" -> 
        3.834710769509565, "rMax" -> 4.11, "dataPoints" -> 6|>, <|
       "Name" -> "UGC05716", "L" -> 0.588, "MassHI" -> 1.094, "Chi2" -> 
        6.385038085490812, "Chi2red" -> 0.6385038085490813, "logSigma0Gas" -> 
        7.0172015301312936`, "hGas" -> 18.028441262123376`, "hGasn" -> 
        1.4574326000099738`, "rMax" -> 12.37, "dataPoints" -> 12|>, <|
       "Name" -> "UGC05721", "L" -> 0.531, "MassHI" -> 0.562, "Chi2" -> 
        17.42900355368365, "Chi2red" -> 0.8299525501754118, "logSigma0Gas" -> 
        7.342958135144941, "hGas" -> 2.3967998108803785`, "hGasn" -> 
        0.3556082805460502, "rMax" -> 6.74, "dataPoints" -> 23|>, <|
       "Name" -> "UGC05750", "L" -> 3.336, "MassHI" -> 1.099, "Chi2" -> 
        0.166033879561504, "Chi2red" -> 0.01844820884016711, "logSigma0Gas" -> 
        6.877112544215853, "hGas" -> 32.32910741557898, "hGasn" -> 
        1.4148405871150538`, "rMax" -> 22.85, "dataPoints" -> 11|>, <|
       "Name" -> "UGC05764", "L" -> 0.085, "MassHI" -> 0.163, "Chi2" -> 
        5.358778030298285, "Chi2red" -> 0.6698472537872856, "logSigma0Gas" -> 
        7.235673579855472, "hGas" -> 4.023814020966926, "hGasn" -> 
        1.1115508345212504`, "rMax" -> 3.62, "dataPoints" -> 10|>, <|
       "Name" -> "UGC05829", "L" -> 0.564, "MassHI" -> 1.023, "Chi2" -> 
        107.3983134332097, "Chi2red" -> 11.9331459370233, "logSigma0Gas" -> 
        8.241168264751469, "hGas" -> 691., "hGasn" -> 100., "rMax" -> 6.91, 
        "dataPoints" -> 11|>, <|
       "Name" -> "UGC05918", "L" -> 0.233, "MassHI" -> 0.297, "Chi2" -> 
        3.635727217589561, "Chi2red" -> 0.6059545362649268, "logSigma0Gas" -> 
        7.91896700564596, "hGas" -> 446., "hGasn" -> 100., "rMax" -> 4.46, 
        "dataPoints" -> 8|>, <|
       "Name" -> "UGC05986", "L" -> 4.695, "MassHI" -> 2.667, "Chi2" -> 
        101.2732914977364, "Chi2red" -> 7.790253192133569, "logSigma0Gas" -> 
        8.189609694799714, "hGas" -> 941., "hGasn" -> 100., "rMax" -> 9.41, 
        "dataPoints" -> 15|>, <|
       "Name" -> "UGC06399", "L" -> 2.296, "MassHI" -> 0.674, "Chi2" -> 
        2.511112663731386, "Chi2red" -> 0.3587303805330551, "logSigma0Gas" -> 
        8.161482943860024, "hGas" -> 784.9999966270683, "hGasn" -> 
        99.99999957032718, "rMax" -> 7.85, "dataPoints" -> 9|>, <|
       "Name" -> "UGC06446", "L" -> 0.988, "MassHI" -> 1.379, "Chi2" -> 
        20.47119570434954, "Chi2red" -> 1.3647463802899693`, "logSigma0Gas" -> 
        7.8316409560484095`, "hGas" -> 220.88984421718186`, "hGasn" -> 
        21.613487692483545`, "rMax" -> 10.22, "dataPoints" -> 17|>, <|
       "Name" -> "UGC06667", "L" -> 1.397, "MassHI" -> 0.809, "Chi2" -> 
        23.363808111803195`, "Chi2red" -> 3.337686873114742, "logSigma0Gas" -> 
        8.172821855252348, "hGas" -> 785., "hGasn" -> 100., "rMax" -> 7.85, 
        "dataPoints" -> 9|>, <|
       "Name" -> "UGC06818", "L" -> 1.588, "MassHI" -> 1.079, "Chi2" -> 
        2.113134243938409, "Chi2red" -> 0.3521890406564015, "logSigma0Gas" -> 
        7.975725880196662, "hGas" -> 698., "hGasn" -> 100., "rMax" -> 6.98, 
        "dataPoints" -> 8|>, <|
       "Name" -> "UGC06917", "L" -> 6.832, "MassHI" -> 2.023, "Chi2" -> 
        43.155829000948046`, "Chi2red" -> 4.795092111216449, "logSigma0Gas" -> 
        8.178975937830275, "hGas" -> 1047., "hGasn" -> 100., "rMax" -> 10.47, 
        "dataPoints" -> 11|>, <|
       "Name" -> "UGC06923", "L" -> 2.89, "MassHI" -> 0.809, "Chi2" -> 
        0.07461034364931744, "Chi2red" -> 0.01865258591232936, "logSigma0Gas" -> 
        7.37219637722353, "hGas" -> 7.469767274059585, "hGasn" -> 
        1.447629316678214, "rMax" -> 5.16, "dataPoints" -> 6|>, <|
       "Name" -> "UGC06930", "L" -> 8.932, "MassHI" -> 3.237, "Chi2" -> 
        29.92445281057455, "Chi2red" -> 3.7405566013218188`, "logSigma0Gas" -> 
        8.300091202434642, "hGas" -> 1660.9999972435594`, "hGasn" -> 
        99.99999983404933, "rMax" -> 16.61, "dataPoints" -> 10|>, <|
       "Name" -> "UGC06983", "L" -> 5.298, "MassHI" -> 2.967, "Chi2" -> 
        80.91804806373716, "Chi2red" -> 5.394536537582478, "logSigma0Gas" -> 
        8.273493097635079, "hGas" -> 1568., "hGasn" -> 100., "rMax" -> 15.68, 
        "dataPoints" -> 17|>, <|
       "Name" -> "UGC07089", "L" -> 3.585, "MassHI" -> 1.214, "Chi2" -> 
        2.0330284451369005`, "Chi2red" -> 0.20330284451369007`, 
        "logSigma0Gas" -> 7.050223232711338, "hGas" -> 20.413700568380595`, 
        "hGasn" -> 2.2285699310459166`, "rMax" -> 9.16, "dataPoints" -> 
        12|>, <|"Name" -> "UGC07125", "L" -> 2.712, "MassHI" -> 4.629, "Chi2" -> 
        19.96461951084702, "Chi2red" -> 1.8149654100770019`, "logSigma0Gas" -> 
        7.004221598213802, "hGas" -> 21.337989915452212`, "hGasn" -> 
        1.1422906806987265`, "rMax" -> 18.68, "dataPoints" -> 13|>, <|
       "Name" -> "UGC07151", "L" -> 2.284, "MassHI" -> 0.616, "Chi2" -> 
        96.7890381496033, "Chi2red" -> 10.754337572178144`, "logSigma0Gas" -> 
        8.314915268888, "hGas" -> 550., "hGasn" -> 100., "rMax" -> 5.5, 
        "dataPoints" -> 11|>, <|
       "Name" -> "UGC07232", "L" -> 0.113, "MassHI" -> 0.046, "Chi2" -> 
        0.039374689095222695`, "Chi2red" -> 0.019687344547611348`, 
        "logSigma0Gas" -> 8.483189956556506, "hGas" -> 82., "hGasn" -> 100., 
        "rMax" -> 0.82, "dataPoints" -> 4|>, <|
       "Name" -> "UGC07261", "L" -> 1.753, "MassHI" -> 1.388, "Chi2" -> 
        18.40745816925345, "Chi2red" -> 3.68149163385069, "logSigma0Gas" -> 
        8.107105535247417, "hGas" -> 667., "hGasn" -> 100., "rMax" -> 6.67, 
        "dataPoints" -> 7|>, <|
       "Name" -> "UGC07323", "L" -> 4.109, "MassHI" -> 0.722, "Chi2" -> 
        83.499172561688, "Chi2red" -> 10.437396570211, "logSigma0Gas" -> 
        8.127529045731952, "hGas" -> 582., "hGasn" -> 100., "rMax" -> 5.82, 
        "dataPoints" -> 10|>, <|
       "Name" -> "UGC07399", "L" -> 1.156, "MassHI" -> 0.745, "Chi2" -> 
        5.000561090613174, "Chi2red" -> 0.6250701363266468, "logSigma0Gas" -> 
        7.183435308254768, "hGas" -> 5.382830959254247, "hGasn" -> 
        0.8781127176597466, "rMax" -> 6.13, "dataPoints" -> 10|>, <|
       "Name" -> "UGC07524", "L" -> 2.436, "MassHI" -> 1.779, "Chi2" -> 
        49.86949720724247, "Chi2red" -> 1.7196378347324988`, "logSigma0Gas" -> 
        8.22773574917215, "hGas" -> 1069., "hGasn" -> 100.00000000000001`, 
        "rMax" -> 10.69, "dataPoints" -> 31|>, <|
       "Name" -> "UGC07559", "L" -> 0.109, "MassHI" -> 0.169, "Chi2" -> 
        0.20055933425892294`, "Chi2red" -> 0.04011186685178459, 
        "logSigma0Gas" -> 7.763908971716552, "hGas" -> 69.14549722314668, 
        "hGasn" -> 27.330236056579718`, "rMax" -> 2.53, "dataPoints" -> 7|>, <|
       "Name" -> "UGC07577", "L" -> 0.045, "MassHI" -> 0.044, "Chi2" -> 
        7.970952558021066, "Chi2red" -> 1.1387075082887237`, "logSigma0Gas" -> 
        7.851238672051034, "hGas" -> 169., "hGasn" -> 100., "rMax" -> 1.69, 
        "dataPoints" -> 9|>, <|
       "Name" -> "UGC07603", "L" -> 0.376, "MassHI" -> 0.258, "Chi2" -> 
        11.905989469887716`, "Chi2red" -> 1.1905989469887717`, "logSigma0Gas" -> 
        7.0987583472147655`, "hGas" -> 2.5331723854104453`, "hGasn" -> 
        0.6163436460852665, "rMax" -> 4.11, "dataPoints" -> 12|>, <|
       "Name" -> "UGC07690", "L" -> 0.858, "MassHI" -> 0.39, "Chi2" -> 
        2.594057935120255, "Chi2red" -> 0.518811587024051, "logSigma0Gas" -> 
        7.2574713004677065`, "hGas" -> 3.868313072742115, "hGasn" -> 
        0.9366375478794468, "rMax" -> 4.13, "dataPoints" -> 7|>, <|
       "Name" -> "UGC07866", "L" -> 0.124, "MassHI" -> 0.118, "Chi2" -> 
        1.4114797403877413`, "Chi2red" -> 0.28229594807754826`, 
        "logSigma0Gas" -> 8.136808520786115, "hGas" -> 231.99999999999997`, 
        "hGasn" -> 100., "rMax" -> 2.32, "dataPoints" -> 7|>, <|
       "Name" -> "UGC08286", "L" -> 1.255, "MassHI" -> 0.642, "Chi2" -> 
        41.43075751776298, "Chi2red" -> 2.7620505011841985`, "logSigma0Gas" -> 
        8.208693814883542, "hGas" -> 803.9999974403222, "hGasn" -> 
        99.99999968163213, "rMax" -> 8.04, "dataPoints" -> 17|>, <|
       "Name" -> "UGC08490", "L" -> 1.017, "MassHI" -> 0.72, "Chi2" -> 
        10.496073332707399`, "Chi2red" -> 0.37485976188240705`, 
        "logSigma0Gas" -> 7.255572875701972, "hGas" -> 3.010580200182866, 
        "hGasn" -> 0.2966088867175237, "rMax" -> 10.15, "dataPoints" -> 30|>, 
       <|"Name" -> "UGC08550", "L" -> 0.289, "MassHI" -> 0.288, "Chi2" -> 
        6.9701170931092955`, "Chi2red" -> 0.7744574547899217, "logSigma0Gas" -> 
        7.070164238217266, "hGas" -> 13.137981634501191`, "hGasn" -> 
        2.451115976586043, "rMax" -> 5.36, "dataPoints" -> 11|>, <|
       "Name" -> "UGC08837", "L" -> 0.501, "MassHI" -> 0.32, "Chi2" -> 
        53.287563611399236`, "Chi2red" -> 8.881260601899871, "logSigma0Gas" -> 
        8.19422687453425, "hGas" -> 420., "hGasn" -> 100., "rMax" -> 4.2, 
        "dataPoints" -> 8|>, <|
       "Name" -> "UGC09037", "L" -> 68.614, "MassHI" -> 19.078, "Chi2" -> 
        25.657249408196783`, "Chi2red" -> 1.2828624704098393`, "logSigma0Gas" -> 
        7.373992622791454, "hGas" -> 37.09155801452435, "hGasn" -> 
        1.3265936342819866`, "rMax" -> 27.96, "dataPoints" -> 22|>, <|
       "Name" -> "UGC09992", "L" -> 0.336, "MassHI" -> 0.318, "Chi2" -> 
        0.5441645366025378, "Chi2red" -> 0.1813881788675126, "logSigma0Gas" -> 
        7.054078509621118, "hGas" -> 4.235670388754737, "hGasn" -> 
        1.0888612824562305`, "rMax" -> 3.89, "dataPoints" -> 5|>, <|
       "Name" -> "UGC10310", "L" -> 1.741, "MassHI" -> 1.196, "Chi2" -> 
        8.853380531076949, "Chi2red" -> 1.77067610621539, "logSigma0Gas" -> 
        8.27886976680573, "hGas" -> 774., "hGasn" -> 99.99999999999999, 
        "rMax" -> 7.74, "dataPoints" -> 7|>, <|
       "Name" -> "UGC11455", "L" -> 374.322, "MassHI" -> 13.335, "Chi2" -> 
        300.2943801333, "Chi2red" -> 8.832187650979412, "logSigma0Gas" -> 
        8.021729340724535, "hGas" -> 4193., "hGasn" -> 100., "rMax" -> 41.93, 
        "dataPoints" -> 36|>, <|
       "Name" -> "UGC11557", "L" -> 12.101, "MassHI" -> 2.605, "Chi2" -> 
        158.28545126222255`, "Chi2red" -> 15.828545126222256`, "logSigma0Gas" -> 
        8.008785561498128, "hGas" -> 1056., "hGasn" -> 100., "rMax" -> 10.56, 
        "dataPoints" -> 12|>, <|
       "Name" -> "UGC11820", "L" -> 0.97, "MassHI" -> 1.977, "Chi2" -> 
        7.869504020557237, "Chi2red" -> 0.9836880025696546, "logSigma0Gas" -> 
        7.125353427940442, "hGas" -> 31.056216012653525`, "hGasn" -> 
        1.9630983573105893`, "rMax" -> 15.82, "dataPoints" -> 10|>, <|
       "Name" -> "UGC12506", "L" -> 139.571, "MassHI" -> 35.556, "Chi2" -> 
        268.3317264458682, "Chi2red" -> 9.2528181533058, "logSigma0Gas" -> 
        7.167164623227089, "hGas" -> 67.4173271769701, "hGasn" -> 
        1.3486162667927608`, "rMax" -> 49.99, "dataPoints" -> 31|>, <|
       "Name" -> "UGC12632", "L" -> 1.301, "MassHI" -> 1.744, "Chi2" -> 
        7.836037506258651, "Chi2red" -> 0.6027721158660502, "logSigma0Gas" -> 
        8.148463199608555, "hGas" -> 1066., "hGasn" -> 100., "rMax" -> 10.66, 
        "dataPoints" -> 15|>, <|
       "Name" -> "UGC12732", "L" -> 1.667, "MassHI" -> 3.66, "Chi2" -> 
        80.52831080894146, "Chi2red" -> 5.752022200638675, "logSigma0Gas" -> 
        8.149588965286412, "hGas" -> 1540., "hGasn" -> 99.99999999999999, 
        "rMax" -> 15.4, "dataPoints" -> 16|>, <|
       "Name" -> "UGCA442", "L" -> 0.14, "MassHI" -> 0.263, "Chi2" -> 
        6.184037433063537, "Chi2red" -> 1.0306729055105894`, "logSigma0Gas" -> 
        7.362601644893766, "hGas" -> 1.766996614718494, "hGasn" -> 
        0.2791463846316736, "rMax" -> 6.33, "dataPoints" -> 8|>, <|
       "Name" -> "UGCA444", "L" -> 0.012, "MassHI" -> 0.067, "Chi2" -> 
        22.5420672999535, "Chi2red" -> 0.6630019794103971, "logSigma0Gas" -> 
        7.266338710353308, "hGas" -> 1.3581944134340436`, "hGasn" -> 
        0.5183948142878029, "rMax" -> 2.62, "dataPoints" -> 36|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 1, {All, "L"} -> 
        1, {All, "MassHI"} -> 1, {All, "Chi2"} -> 1, {All, "Chi2red"} -> 
        1, {All, "logSigma0Gas"} -> 1, {All, "hGas"} -> 1, {All, "hGasn"} -> 
        1, {All, "rMax"} -> 1, {All, "dataPoints"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "L" -> TypeSystem`PackageScope`AtomShape[60], "MassHI" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2red" -> 
            TypeSystem`PackageScope`AtomShape[60], "logSigma0Gas" -> 
            TypeSystem`PackageScope`AtomShape[60], "hGas" -> 
            TypeSystem`PackageScope`AtomShape[60], "hGasn" -> 
            TypeSystem`PackageScope`AtomShape[60], "rMax" -> 
            TypeSystem`PackageScope`AtomShape[60], "dataPoints" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "L", "MassHI", "Chi2", "Chi2red", "logSigma0Gas", "hGas", 
         "hGasn", "rMax", "dataPoints"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 122], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 1, {All, "L"} -> 
        1, {All, "MassHI"} -> 1, {All, "Chi2"} -> 1, {All, "Chi2red"} -> 
        1, {All, "logSigma0Gas"} -> 1, {All, "hGas"} -> 1, {All, "hGasn"} -> 
        1, {All, "rMax"} -> 1, {All, "dataPoints"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "L" -> TypeSystem`PackageScope`AtomShape[60], "MassHI" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2" -> 
            TypeSystem`PackageScope`AtomShape[60], "Chi2red" -> 
            TypeSystem`PackageScope`AtomShape[60], "logSigma0Gas" -> 
            TypeSystem`PackageScope`AtomShape[60], "hGas" -> 
            TypeSystem`PackageScope`AtomShape[60], "hGasn" -> 
            TypeSystem`PackageScope`AtomShape[60], "rMax" -> 
            TypeSystem`PackageScope`AtomShape[60], "dataPoints" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "L", "MassHI", "Chi2", "Chi2red", "logSigma0Gas", "hGas", 
         "hGasn", "rMax", "dataPoints"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 122], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 122, 
     "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["L", 
                  Style[
                  "L", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "L"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "L"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MassHI", 
                  Style[
                  "MassHI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MassHI"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MassHI"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Chi2", 
                  Style[
                  "Chi2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Chi2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Chi2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Chi2red", 
                  Style[
                  "Chi2red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Chi2red"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Chi2red"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["logSigma0Gas", 
                  Style[
                  "logSigma0Gas", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "logSigma0Gas"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "logSigma0Gas"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hGas", 
                  Style[
                  "hGas", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "hGas"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "hGas"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hGasn", 
                  Style[
                  "hGasn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "hGasn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "hGasn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["rMax", 
                  Style[
                  "rMax", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "rMax"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "rMax"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dataPoints", 
                  Style[
                  "dataPoints", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "dataPoints"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "dataPoints"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["CamB", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.075"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.05159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.150227"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.90769"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.772127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.431356"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D512-2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.325"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.081"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000448053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000224027"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.41583"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.65542"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.693322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D564-8", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.033"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.029"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00214896"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00053724"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.55397"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.436267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.07"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D631-7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0619185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00442275"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.43313"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.50127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2088"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO064", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.157"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.211"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39.6913"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.30761"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.44338"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["298.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO154", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.275"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.99767"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299767"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.05642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.46153"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.415799"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO161", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.548"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.29978"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.148268"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.34276"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.27232"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.319545"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO168", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.191"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.413"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.83433"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.229291"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.62077"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23224"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299087"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DDO170", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.543"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.735"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.41061"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.735102"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.02677"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.97407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.565618"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO079-G014", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51.733"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28.9012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.22317"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.07341"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1667.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO116-G012", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.292"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.083"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43.409"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.33916"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.26251"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["696.121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70.6005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO444-G084", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.071"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.135"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.26827"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.653654"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.44944"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.13058"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.254635"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ESO563-G021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["311.177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.298"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["457.495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.3391"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.83458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4241.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42.41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F565-V2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.559"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.699"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0348047"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00696095"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.10494"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25.5569"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.90419"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F568-3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.346"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["65.3286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.08304"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.07501"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1798.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F568-V1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.825"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.491"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56.0404"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.3108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.05385"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1763.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F571-8", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.164"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.782"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.145295"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0132086"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.29444"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.59688"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.424237"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F571-V1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.849"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.217"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.60502"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.521003"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.99776"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.4903"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.919077"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F574-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.537"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.524"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25.3117"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.10931"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.87356"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1260.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["F583-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.986"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["L"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["MassHI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["273.478"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Chi2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.8903"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Chi2red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.88569"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["logSigma0Gas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1626.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["hGas"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["hGasn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["rMax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["dataPoints"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 122, 1], {1, 122 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 122, 1], {1, 122 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[122, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[122, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 122, 1], {1, 122 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 122, 1], {1, 122 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{903., {378.41754150390625`, 385.58245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{903., {378.41754150390625`, 385.58245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.856901067475382*^9, 3.856979688581728*^9, 
  3.857039443749452*^9, 3.857041298043805*^9, 3.857045836571245*^9, 
  3.857484504008854*^9, 3.8682096151501207`*^9, 3.872347967910029*^9, 
  3.872348039996601*^9, 3.8724260149927197`*^9, 3.872426751970982*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"f8a899b4-26aa-48f2-ad48-7a9eaf7bb882"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<headerGasAux.txt\>\"", ",", " ", 
     RowBox[{"{", "\n", "  ", 
      RowBox[{
      "\"\<# Additional velocity distribution: a fast sample analysis for \
dark matter or modified gravity models\>\"", ",", "\n", "  ", 
       "\"\<# by A. Hernandez-Arboleda, D. C. Rodrigues, A. Wojnar\>\"", ",", 
       "\[IndentingNewLine]", "  ", "\"\<# \>\"", ",", "\n", "  ", 
       "\"\<# This file: Best fit results of an exponential model for the \
gaseous component of 122 SPARC galaxies.\>\"", ",", "\n", "  ", 
       "\"\<# 1st column: galaxy name.\>\"", ",", "\n", "  ", 
       "\"\<# 2nd column: reference luminosity value from SPARC L (10^9 \
Msun), not fitted.\>\"", ",", "\n", "  ", 
       "\"\<# 3rd column: reference HI mass value from SPARC MassHI (10^9 \
Msun), not fitted.\>\"", ",", "\n", "  ", 
       "\"\<# 4th column: best-fit disk scale length hGas (kpc).\>\"", ",", 
       "\n", "  ", 
       "\"\<# 5th column: best-fit central surface density logSigma0Gas \
(log_10 Msun/kpc^3).\>\"", ",", "\n", "  ", 
       "\"\<# 6th column: normalized disk scale length hGasn.\>\"", ",", "\n",
        "  ", "\"\<# 7th column: the minimum chi-squared value Chi2.\>\"", 
       ",", "\n", "  ", 
       "\"\<# 8th column: the number of galaxy data points that were used for \
the fit dataPoints.\>\"", ",", " ", "\n", "  ", "\"\<# \>\"", ",", "\n", 
       "  ", "\"\<# \>\""}], "\n", "}"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"datasetGasExport", " ", "=", " ", 
   RowBox[{"datasetExpVgasNoBulge", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Name\>\"", ",", " ", "\"\<L\>\"", ",", " ", "\"\<MassHI\>\"", ",", 
       " ", "\"\<hGas\>\"", ",", "\"\<logSigma0Gas\>\"", ",", " ", 
       "\"\<hGasn\>\"", ",", "\"\<Chi2\>\"", ",", " ", "\"\<dataPoints\>\""}],
       "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<GasExponentialBestFitAux.tsv\>\"", ",", " ", "datasetGasExport", ",",
      " ", 
     RowBox[{"Alignment", "->", " ", "Left"}], ",", " ", 
     RowBox[{"\"\<TextDelimiters\>\"", "\[Rule]", "None"}]}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Run", "[", 
    "\"\<cat headerGasAux.txt GasExponentialBestFitAux.tsv > \
GasExponentialBestFit.tsv\>\"", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "It", " ", "is", " ", "only", " ", "guaranteed", " ", "to", " ", "work", 
     " ", "in", " ", "Unix", " ", 
     RowBox[{"systems", ".", " ", "Sorry"}], " ", "Windows"}], "..."}], 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DeleteFile", "[", "\"\<headerGasAux.txt\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteFile", "[", "\"\<GasExponentialBestFitAux.tsv\>\"", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<datasetExpVgasNoBulge.m\>\"", ",", " ", "datasetExpVgasNoBulge"}], 
   "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.855648277486034*^9, 3.855648299962582*^9}, {
   3.855843977409341*^9, 3.855843980875237*^9}, {3.8558463287389097`*^9, 
   3.8558463303461647`*^9}, {3.855846575200954*^9, 3.855846590533021*^9}, {
   3.855846624226798*^9, 3.855846632325899*^9}, 3.855846951350564*^9, {
   3.855849082222673*^9, 3.855849095654479*^9}, {3.855927085735948*^9, 
   3.855927188776141*^9}, {3.855927220985611*^9, 3.85592727589647*^9}, {
   3.855927310288843*^9, 3.85592734754875*^9}, {3.855927416005422*^9, 
   3.855927526638777*^9}, {3.855927561965169*^9, 3.8559275866575212`*^9}, {
   3.8559276230417433`*^9, 3.855927689257972*^9}, {3.855927835610734*^9, 
   3.855927835689125*^9}, {3.855932259223421*^9, 3.855932360271467*^9}, {
   3.855932392255313*^9, 3.855932428210528*^9}, {3.8682118520940447`*^9, 
   3.868211866989047*^9}, {3.872348012480324*^9, 3.872348057650399*^9}, {
   3.8723480985000143`*^9, 3.872348134332473*^9}, {3.872348238522586*^9, 
   3.872348240354251*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"8cdd88f5-b1da-4f3f-9b7a-63a5e96985ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing the approximations", "Subsection",
 CellChangeTimes->{{3.872348384119018*^9, 
  3.872348387223349*^9}},ExpressionUUID->"6a6c9685-3855-4757-b6ab-\
48d6e2892b4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"listn", ",", " ", "listnInt", ",", " ", "listnIntDP"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listn", "[", "gal_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", " ", 
         RowBox[{"rmax", "[", "gal", "]"}]}], "#1"}], ",", " ", "#2"}], "}"}],
      " ", "&"}], " ", "@@@", " ", 
    RowBox[{"gdRBulgeless", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Rad", ",", " ", "Vgas"}], "}"}], ",", " ", "gal"}], "]"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listnInt", "[", 
    RowBox[{"gal_", ",", " ", "rn_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Quiet", "@", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"listn", "[", "gal", "]"}], ",", " ", 
       RowBox[{"Method", " ", "->", " ", "\"\<Spline\>\""}]}], "]"}], "[", 
     "rn", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listnIntDP", "[", "gal_", "]"}], " ", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rn", ",", " ", 
       RowBox[{"listnInt", "[", 
        RowBox[{"gal", ",", " ", "rn"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"rn", ",", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", " ", "30"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listnIntDPAll", " ", "=", "  ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"listnIntDP", " ", "/@", " ", 
      RowBox[{"Range", "[", "175", "]"}]}], ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"listnIntDPAll", ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30"}], ",", " ", "100"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Axes", " ", "->", " ", "False"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "True"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.872348707014558*^9, 3.872348949287222*^9}, {
  3.872349024575407*^9, 3.872349102898466*^9}, {3.8723496348224287`*^9, 
  3.872349655995685*^9}, {3.872349698476956*^9, 3.872349783863078*^9}, {
  3.87234984497054*^9, 3.872349944774344*^9}, {3.872350024393791*^9, 
  3.872350024478318*^9}, {3.872350087606811*^9, 3.872350098989504*^9}, {
  3.8723502006687307`*^9, 3.8723502228191*^9}, {3.872350382551021*^9, 
  3.8723504060274773`*^9}, {3.8724249140453243`*^9, 3.87242492749636*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"d40b1447-ac00-46aa-bde2-31f6c9a677d2"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
cOiebmFmjgneJykUCXqNQ2XVOaaqVGP03u/YuijbCxXKoTUPEvTRZSXOdC1/
AtrsVUcZfptg57uxTeLAJCz/qXNSoDLBiDWOH4OGX2HtRebF7hhVDNTjGqw5
QAIMKCqflzHGXzUpKpf4F8H84p7su28JGOadKv2EOhlOx5u+DFZjQs1PLdz9
hQtw8lfgZ/erFhjUEPn0zfAKZLfWur1etUT5Cy2eN55MgJRrjIpmgjFeGbts
X6xGAmF3wVPnvEyQeMSRzCtUByyhDeaLIId0V56xiBhNQPRK5PntYGN0u37e
b0t3Epxyk3MNyo2R6/qjko01MmQe6hJSOmCJ3tGK6aXRVfAp6++rd2RxbI87
YhWyewXcL6mc9GO2wleK7UuDdQsQzF9m0xhhgWFM2XkC32+DTcRX26J2ceKy
HkvY18E5+LpYyNdvR/H/4DP6k2+XoG3PXA3tmiW6p4wR7nL3gHoqi23lXR2k
F5eldh1qhdF2lUvvDqjiMHtln4R2L+R1Sq9/n9JFm35F1QOmc3DdSmen+LgZ
Rr+guyuxlww7K8dDKz5b4Keux2RSyiKwnLB1PPzSkuKnSurvwktAcljva2La
XiJVvebfgv1k+CeT5PZ90gKD6frWjnyegf6Q7espu8xQNbp2w0RyAvz/Xdbo
OWuM7WpzgbspfNbV5Oo5pUdAE7XfH/1fjgHLnZFSVhaKfz5SmlW9/wW4pQOi
W4oU0K0z9Y1L1go8Orlzz4tNS+QsZTBbGumBarq7f8+F6aLXZYd3uUI94NhD
JPk81kHbyfECUd85aNS8Km6lYorueuKP2jPywCmnRpplixtT7z6p1+bLgIU7
3s+5zrBjc+tKgvIkhfevWtBsfjRHqvC8plzGFJCMVF35FMeCNmmc2w/ShiHg
e4CbtL4xNuz31fW41QIj5HC93+0U/740bDZs8BEeLtKri6RIYm8dVUxR/ixc
ah2ouLZhguOlq5u0QV+hSlbfvHMSkdiT/KYyIh5SJxv8Qg4zY25j65Sr4Qh0
9/pqVP2m6FmkmapodwEYRNt2j8xzo+Y/rm+TL+bBbfFtlHyKKabzPL38PXgG
lG7uPhDhQPGHYub1b5xfIEXQVWT4hyGadG/0fF/ogDv5VCbt4+ZI5Ge5JPxh
HKJjZqTFZI2x11ffT/vwBIzmJpXXBxijq+KRHVIzlLwUMLag+WeKtYXvkcGJ
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
8X9ddBhN
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.9999995799152079}, {-30., 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8723487282980537`*^9, 3.872348738070107*^9}, 
   3.872348769785328*^9, {3.872348815161242*^9, 3.872348832536825*^9}, 
   3.8723489551788797`*^9, {3.872349091776125*^9, 3.872349103912665*^9}, {
   3.872349678055436*^9, 3.872349706130047*^9}, 3.872349786999077*^9, {
   3.872349890460917*^9, 3.872349946654502*^9}, 3.8723500263043833`*^9, {
   3.8723500961268377`*^9, 3.872350100711504*^9}, {3.872350216754532*^9, 
   3.872350224576776*^9}, {3.872350387666421*^9, 3.872350407804183*^9}, {
   3.872424923541884*^9, 3.872424929167694*^9}},
 CellLabel->
  "Out[336]=",ExpressionUUID->"7238aa3e-c44e-462d-a0bd-fcee4900269e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "listCurve", ",", " ", "rn", ",", " ", "listCurveDP", ",", " ", 
    "listCurveDPall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listCurve", "[", "gal_", "]"}], " ", ":=", " ", 
   RowBox[{"vExp", "[", 
    RowBox[{
     RowBox[{"rn", " ", 
      RowBox[{"rmax122", "[", "gal", "]"}]}], ",", " ", 
     RowBox[{"datasetExpVgasNoBulge", "[", 
      RowBox[{"gal", ",", " ", "\"\<logSigma0Gas\>\""}], "]"}], ",", " ", 
     RowBox[{"datasetExpVgasNoBulge", "[", 
      RowBox[{"gal", ",", " ", "\"\<hGas\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listCurveDP", "[", "gal_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rn", ",", " ", 
      RowBox[{"listCurve", "[", "gal", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"rn", ",", " ", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", " ", "30"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listCurveDPall", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"listCurveDP", " ", "/@", " ", 
      RowBox[{"Range", " ", "@", " ", "122"}]}], ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"listCurveDPall", ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30"}], ",", " ", "100"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Axes", " ", "->", " ", "False"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.872349195952551*^9, 3.8723492231742077`*^9}, {
  3.872349345831708*^9, 3.872349345912315*^9}, {3.872349384890483*^9, 
  3.872349473340913*^9}, {3.872349537306836*^9, 3.8723496082383537`*^9}, {
  3.872350010992669*^9, 3.87235001705618*^9}, {3.87235010297381*^9, 
  3.8723501096777887`*^9}, {3.8723502498434353`*^9, 3.872350255692659*^9}, {
  3.87235028917515*^9, 3.872350301223482*^9}, {3.872350341036192*^9, 
  3.872350351497553*^9}, {3.872424936172473*^9, 3.87242493970266*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"a635d61c-a7f4-4e20-b4cd-6062abdc3107"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
cAurvHtF9zgOxYaE/GfVB0XklKc/Ouliy4vajhK6ZXi7xrT0MtocoxT3WET1
lcOUc27Vrdcknj3UNPgkdBWSeWha78ocR7IQw7TJuxehSPOvtsfDSXC9Pi5b
LlADZ10Vh9OlSLwdIEevRdUO9P71GZuTgCiaLBwQlgacagZVF58IoFeTVUrx
625oKNrJs+3VxqqktB0WlT4QnjZnbj6pixS0V+p0j87CqKTSTZZlU9R17cYF
sykoiJQQPtN7FMnsTxW9Ho6FmAibqHY/VoyxPZ16omMevpVSFsx7H8MNFXdR
t7kx+DKT0feX2QhVBtx7o3cW4PL0/S8FDOZ4/7JCd8TXAYivlQkqTNdDqtzr
TCfqOsDtqN3MHw4tTJXIDit2WQDWE+0WSx3HUMyaL/DK2xHQozFZ4HingQmq
y8FHWJdBSWq/5hcpDbS6/b7f/y1J375aOoXu00CnbV/yh8cHQXCFdtZ2WR3b
3md5Y/1XWDGe/iz4WwxpBLsW3h7qA/+Sz/viNtUw+4pDMkvlBEhQuO1rs9TE
sIntwm8h38Dn2eR0Gik/kAUpbIpfigRWfykq1bOMqBCTo/JBvg8S7xy9mUZO
0leZ6DW6oAm4qXTFl9JcE8scKDqyb+UAgTnmj8+UKLal/Q2Y/TMMd2/3VVwO
0MCR4Lhf1+gWYHrq2uMj3RoYnkodcWXfGBy3Gal60KeBqTPhF599nQKzL3Wv
ZS5r4n3X2+f1RlaAvtjBy6tAHWdcIAqDp2Dq2cPb10n3Q+jUr1w81Q62Kbxl
4dUq2HaxqbSLUA3bBWOXPRTlEY3cR4K3GuGtN/mdSDslFNA7nidSvQBiM/+q
lzI1UMEx7eO01hJwNX4/9clGA8PGVK5Ofp8GnsZDlkHnNFH3okXn//2CL7eP
24RKFV0e6eRcFJmGT7O0e7cdNVHoFu37s2xD4DAbkLPLrYFj1SGe6NsE9bu/
Js69UkLO015NzR9WgS6C1rHsnjo2NVC9fbHSBuxH+IV87qngVs8JfQW1PmhW
K91VtJRHIePvDK2KE2As9Ds4h0YdXeOLL4uxLsLr6StcTsy6qHI7g13sRRuE
bASxGhtKInIpLVsL5cGsZa5uRCQzsnfnsSl/KwcR2h2mxfe8ONYdvZ/97jjc
TvHMe0yjhipsLLrwcBZeDN93mk3XQjy1kE7VnQRZ/PtcTC5SYdxu8Ec/sTm4
wWV7/C+XNvqXuZLZz7+B3R+hOcOZf6Ar+KUcG2UbqH7cp068LoFt9A87vpJN
Qs+dfc8nBTXQOL3q8EPJOdj7/vWXfbzaaCspzeg8lQY8zF/Gyu/TYWKXO1Xn
pS64fzpyUfm+LIY53E59fHsc7POF/IIp1ZCb2uz+T5oeCLOdsG7Jl8PiRb47
1+o7ICiNdezxO2kcehHHGRc1CWoyAj4HfmkgQ96A50/BRjjdFbN3b7YIjlTQ
MF5InIBZ5amnsu/V0eLQ26Pj5DPAmlzgsZWIqPJpYoxbeQFWK0RqaO/qINmZ
WaElphT4ZclJvGVNjV5dAbTbVHNwsDvLZ5FSGztOR35yspuBYqHEAopZRMen
fz9ea1oFwk1e+ySiAa7lPdv2sioCO6b7Xvfo2TEuM8VPw7AU7vVlxfa7cqI6
pczv3KEF+CYWczykXh/jJPPJRvOK4EtLia1XkSg65X2YE1gbBwE0eTnyVRvj
eJsZS/OK4R5NpSr/ZTH0ekltvxvTBPFBFjz07xXQZTivIr10Gb7/t9TUWGyA
EnHUotqxs0D3LMDN5KEe0ufXhLOPToFSQ3SLt64uWrn9sBlYa4G34gHBn7oV
8U13z60awRFoCL7E/XMVkUp7aOoxdAEDU9NVquOquEWf7PGYtwY83mg9Wj4o
h+aPGdi5PaqhQ+L0yYo0WWTeTh7fFl2ESME9lJJT+lh8zDizUJ4ktHt6l6Qu
66AFtevCE+pJEDczIus310Ez6Mg2Ex2HyHcsVu6ojW8cbvk0GXeAa9HLsK5Q
FbTdi/MnzrYDizArPzFDGT0DX19IPDoGul3h4daFWkhh+L4md3ARYlKPJe4V
MMA4wpm9Aoc/w22h7t4zI9xItshWWcL9GPzsRvsZo3dhKz1JwogwD/wHXdds
BPXRocDvugnvFFze68e2OKmDdK/c9rppL8Hjc1mP/tM1wJRO7l9kAisgk/tE
M3GAtJ/Rm/bCiVnAuV5Mx+5KwLhz9kwJz+Mg2sZ6w8aKEcn8qZlPWJqDiZNX
1uW1WlCgHjPutl+CA/WBVlXvEENfFQkzEKcgbvORcIgskvLHCZuU6VWgV08s
uu9L6h9Vf/vJgDn4aPM8Lfcl4tR1DrZw026IOnVpUfP/34tSGerrPg2BVYc1
+Zs3qDCs90mX+jdSnnX6PbQZh+j7wiG2Nmsc1ptPEfN9ANP0RsgsH8/Cr5/S
G08fItIbfFB08hsDFrKUEcYZTcw869/yTigfjFheNS/vF0PWpSLd5pll+CHW
ymcajui/x2Mxsy4DnEZNBuND+DHNsTSN5v4IKEeEcInKaKKNs63Lh9EZKAuQ
Dyj3QSS7nvk8MmkK3k2WFZkgov7gRubhJ4tQdU3zyZl4RKv+HcWjR+Zgnthx
9EwYYorlif/eXWqFgq921e5uSpjJfaXX8GULpHPuSQrlUcLASg/ne1rTwELZ
ZnL+P9L5XPB8MRHZB4MpBiUiM2qY73IoNlpyHnz/sp5hiiHx8FeX4KK6SvAR
FzSv2ZDFYgFmN17LfnDzTKE0UFdHqqudrhGx81CvtKKn+xZRbGSn9RepH+vW
mm/PkSHWqT2h13GZAo3XWx9XVBBtx4e6c3xzgOHdfIikqTAKqefX6eEQ3GC/
XdJzmeSvf9JVKPrmgWviXt4KBxEH5Oivdn2bgksq3rKxL+Xw/g2B+oTxTqhl
3YlXJPHwwLrZ0ujgFHyjSriuHiWHeMZ3R+nDAOxncgjVLJTG/I9ru++2VsEm
XW93lpOIU3mhd/87NArnV358zdKWxZCf1ocWLDrhMdclus/3JVBWpML21FAH
xM+N1XjIkq75zeefl/RCcdDPgUXtw5h5eGPs2FYnfHnKFRCxKYFlJeOnnkR8
A+NDBXt9A3hxKe2lkl/HLBDII/nSN+UwxGmF4j/OTrinKhZVflYC0x6wDlwf
Gwa+nSw3DzpZtM4faHtgvAT7434eo5Akoh8Po5S02TyspaiSv2QiovXpZBv7
4WmIvvJu6kMp6f+NhpTVHWyCbrqYwFB5EQxhLvE5M973P4rOO56q/4/jqCSp
yJZk7733++3aklSiZBWVrCSJ8i1KQipZSUKoJIrITvbeK9u1r70yS/3u78/z
OOc+7ud8Hu/3+/V83sfjngNjW9xJNoPk9YVE6mz/6IPNk8qc76vI93+wfXuM
qRIu6n5b/LLFg5bR2pNHv81BwOef+vfI37epnryqmtUK/MJFouuPhdHOp//g
4+UUaGTMHrmiSouoetYufaoLvnW57bDLi6NpW/SR+cxWiA7z3MwlX1/L67bQ
eLsKJGKSLERqeTG+tqwja3IczNt2q/19RebrNdseMdohWHx2fM7ysDRS37h4
LSZgGvZnX6UW+k8J52T133W2DsHaDBH8CiQwILlhyU59GG6anJf4wyqJdkvM
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
FfDIyqDLZZDA/wHiLccs
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.9996659203967335}, {-30., 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.872350019740921*^9, 3.872350112360705*^9, 3.872350282293839*^9, {
   3.872350345793367*^9, 3.872350354081107*^9}, 3.872424942304557*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"0093a376-85b1-4bba-823a-58c34cc62396"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "nSigmaProbability"}]], "Input",
 CellChangeTimes->{{3.8724250584149923`*^9, 3.872425058751171*^9}, 
   3.872425089386158*^9},
 CellLabel->
  "In[344]:=",ExpressionUUID->"f7b55fe8-80d1-43b2-9c4d-8d9c1a78b4bb"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownSymbol\"\>", ",", "\<\"nSigmaProbability\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.872425059775674*^9, 3.872425089948545*^9},
 CellLabel->
  "Out[344]=",ExpressionUUID->"91b5637d-6a3b-4665-8ca5-afed97dc6eec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input",
 CellChangeTimes->{{3.8724250726791162`*^9, 3.872425074071649*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"88cd8c28-ae49-445d-aec2-ddcfc6aef223"],

Cell[BoxData["\<\"Global`\"\>"], "Output",
 CellChangeTimes->{3.8724250745297747`*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"f3512a59-ffb0-4379-a818-8ff679af1c04"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"distGas", " ", "=", " ", 
     RowBox[{"distributionSilverman", " ", "@", "listCurveDPall"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pdfValuenSigmaGas", "[", 
      RowBox[{"n_", "?", "NumberQ"}], "]"}], " ", ":=", " ", 
     RowBox[{"FindHDPDFValues", "[", 
      RowBox[{"distGas", ",", " ", 
       RowBox[{"nSigmaProbability", "[", "n", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"plotBluePalatini", " ", "=", " ", 
     RowBox[{"plotBlue", "[", 
      RowBox[{
      "list2\[Delta]VVmodelAll", ",", " ", "list1LimitsSigmaPalatini", ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", " ", 
           RowBox[{"xmax", " ", "-", " ", "0.01"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", " ", "2.5"}], "}"}]}], "}"}], ",", " ", 
       
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.99"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", " ", "2.5"}], "}"}]}], "}"}]}]}], 
      "]"}]}], " ", "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "plotPalatiniSigma", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotPalatiniSigma", "[", "n_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"plotPalatiniSigma", "[", "n", "]"}], " ", "=", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pdfValue", ",", " ", "contourStyle"}], "}"}], ",", "\n", 
        "  ", 
        RowBox[{
         RowBox[{"pdfValue", " ", "=", " ", 
          RowBox[{"pdfValuenSigmaPalatini", "[", "n", "]"}]}], ";", "\n", 
         "  ", 
         RowBox[{"Which", "[", "\n", "    ", 
          RowBox[{
           RowBox[{"n", " ", "==", " ", "1"}], ",", " ", 
           RowBox[{"contourStyle", " ", "=", " ", 
            RowBox[{"Directive", "[", 
             RowBox[{"Purple", ",", " ", "Dashed", ",", " ", "Thick"}], 
             "]"}]}], ",", " ", "\n", "    ", 
           RowBox[{"n", " ", "==", " ", "2"}], ",", " ", 
           RowBox[{"contourStyle", " ", "=", " ", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Lighter", " ", "@", " ", "Purple"}], ",", " ", 
              "Dashed"}], "]"}]}], ",", "\n", "    ", "True", ",", " ", 
           "Automatic"}], "\n", "  ", "]"}], ";", "\n", "  ", 
         RowBox[{"ContourPlot", "[", "\n", "    ", 
          RowBox[{
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{"distPalatini", ",", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], " ", "==", " ", 
            "pdfValue"}], ",", " ", "\n", "    ", 
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"y", ",", " ", 
             RowBox[{"-", "1"}], ",", " ", "5"}], "}"}], ",", "\n", "    ", 
           RowBox[{
           "PerformanceGoal", " ", "\[Rule]", " ", "\"\<Quality\>\""}], ",", 
           " ", "\n", "    ", 
           RowBox[{"ContourStyle", " ", "\[Rule]", " ", "contourStyle"}]}], 
          "\n", "  ", "]"}]}]}], "\n", "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8724250106467447`*^9, 3.872425047748713*^9}, 
   3.872425084898218*^9},ExpressionUUID->"5b3310da-42ef-444e-8075-\
4002f60afae0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1402, 911},
WindowMargins->{{421, Automatic}, {Automatic, 84}},
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cf8714f9-527a-4919-be50-26a66ad5a75b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 542, 8, 86, "Chapter",ExpressionUUID->"19249ee4-d487-43e0-b6dd-ca5648b1a366"],
Cell[1125, 32, 642, 12, 109, "Author",ExpressionUUID->"2e487a3f-df0d-4eea-bece-412f6c7ca7c8"],
Cell[CellGroupData[{
Cell[1792, 48, 1341, 33, 258, "Code",ExpressionUUID->"d2916f68-f34d-4463-bea2-606d3a7bcc3e"],
Cell[3136, 83, 19255, 448, 298, "Print",ExpressionUUID->"ed0145a5-281f-4104-bceb-944b6dbdc8c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22428, 536, 166, 3, 84, "Section",ExpressionUUID->"74279a48-9b29-46d3-991f-68378081c25e"],
Cell[22597, 541, 2903, 77, 362, "Code",ExpressionUUID->"f867ece0-9c99-4286-b24b-098572b0d1a9"],
Cell[25503, 620, 151, 3, 37, "Input",ExpressionUUID->"c1a86fbe-4af4-4355-a8c9-804f0a8ce9f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25691, 628, 541, 8, 84, "Section",ExpressionUUID->"337fc1a2-e6c9-486b-aa66-f2ae2c3561bd"],
Cell[26235, 638, 13495, 271, 1170, "Code",ExpressionUUID->"d3f0886b-7b3b-4b37-af9c-117114366cea"],
Cell[CellGroupData[{
Cell[39755, 913, 4482, 73, 186, "Code",ExpressionUUID->"fa3dd150-30e5-4e8f-b922-fedb75a6a902"],
Cell[CellGroupData[{
Cell[44262, 990, 195, 4, 32, "Echo",ExpressionUUID->"520b352d-53e8-46a1-8eb8-0bfec76a4438"],
Cell[44460, 996, 143, 3, 32, "EchoTiming",ExpressionUUID->"e978097d-6030-4c1d-9dec-5c1a4d3faedf"]
}, Open  ]],
Cell[44618, 1002, 191506, 3673, 787, "Output",ExpressionUUID->"3d143393-dd54-4084-9ed1-1ef47f448d69"]
}, Open  ]],
Cell[236139, 4678, 4265, 86, 666, "Code",ExpressionUUID->"eb6989f0-d120-450c-b8d4-31284397365b"],
Cell[CellGroupData[{
Cell[240429, 4768, 174, 3, 67, "Subsection",ExpressionUUID->"3f92c27a-ad01-4091-98a4-25453a89c2e3"],
Cell[CellGroupData[{
Cell[240628, 4775, 2615, 70, 194, "Input",ExpressionUUID->"7c577b39-07a5-455e-a99a-ea89d1f453cc"],
Cell[243246, 4847, 77602, 1286, 310, "Output",ExpressionUUID->"c260aed9-0deb-4ff1-8868-ce744ac3a038"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320885, 6138, 2084, 51, 142, "Input",ExpressionUUID->"08a6c2ec-9f9e-494f-a163-122e30112c77"],
Cell[322972, 6191, 77261, 1281, 310, "Output",ExpressionUUID->"553d57ec-1c06-4c29-b0ff-3de8aa9a3e96"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[400294, 7479, 593, 9, 84, "Section",ExpressionUUID->"b313ec39-f225-4fa4-8ab9-eb109cd9a57a"],
Cell[400890, 7490, 876, 16, 186, "Code",ExpressionUUID->"e7ffcf43-b4d0-4e39-b0b6-96dff7bdf763"],
Cell[CellGroupData[{
Cell[401791, 7510, 296, 5, 56, "Subsubsection",ExpressionUUID->"b96595ee-7bc1-49eb-ae18-c539238e12db"],
Cell[402090, 7517, 7330, 158, 570, "Code",ExpressionUUID->"6ccef853-23ff-4ade-ace8-5e55603ecafc"],
Cell[CellGroupData[{
Cell[409445, 7679, 1000, 25, 186, "Code",ExpressionUUID->"bfc0f34f-3122-4203-a11d-6c54f2e37d9e"],
Cell[CellGroupData[{
Cell[410470, 7708, 194, 4, 32, "Echo",ExpressionUUID->"f795bf59-c143-4bf4-96e2-05b96670265c"],
Cell[410667, 7714, 143, 3, 32, "EchoTiming",ExpressionUUID->"ea349b37-9d3a-4670-bbd6-beec08ca6fde"]
}, Open  ]],
Cell[410825, 7720, 191108, 3668, 787, "Output",ExpressionUUID->"f8a899b4-26aa-48f2-ad48-7a9eaf7bb882"]
}, Open  ]],
Cell[601948, 11391, 4076, 86, 666, "Code",ExpressionUUID->"8cdd88f5-b1da-4f3f-9b7a-63a5e96985ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606061, 11482, 174, 3, 67, "Subsection",ExpressionUUID->"6a6c9685-3855-4757-b6ab-48d6e2892b4e"],
Cell[CellGroupData[{
Cell[606260, 11489, 2713, 72, 194, "Input",ExpressionUUID->"d40b1447-ac00-46aa-bde2-31f6c9a677d2"],
Cell[608976, 11563, 77830, 1290, 309, "Output",ExpressionUUID->"7238aa3e-c44e-462d-a0bd-fcee4900269e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686843, 12858, 2271, 55, 142, "Input",ExpressionUUID->"a635d61c-a7f4-4e20-b4cd-6062abdc3107"],
Cell[689117, 12915, 77323, 1283, 309, "Output",ExpressionUUID->"0093a376-85b1-4bba-823a-58c34cc62396"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766477, 14203, 237, 5, 37, "Input",ExpressionUUID->"f7b55fe8-80d1-43b2-9c4d-8d9c1a78b4bb"],
Cell[766717, 14210, 278, 6, 42, "Output",ExpressionUUID->"91b5637d-6a3b-4665-8ca5-afed97dc6eec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[767032, 14221, 185, 3, 37, "Input",ExpressionUUID->"88cd8c28-ae49-445d-aec2-ddcfc6aef223"],
Cell[767220, 14226, 169, 3, 42, "Output",ExpressionUUID->"f3512a59-ffb0-4379-a818-8ff679af1c04"]
}, Open  ]],
Cell[767404, 14232, 3611, 89, 558, "Input",ExpressionUUID->"5b3310da-42ef-444e-8075-4002f60afae0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

